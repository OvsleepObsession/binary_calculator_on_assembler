
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	C:\Users\George\Desktop\Микроконтроллеры\Рабочая\test.asm
	Object File:	C:\Users\George\Desktop\Микроконтроллеры\Рабочая\test.hex
	List File:	C:\Users\George\Desktop\Микроконтроллеры\Рабочая\test.lst



 Line  I  Addr  Code            Source

    1:
    2:				; двоичный калькулятор на микропроцессоре at89s8253.h
    3:				; сначала осуществляется ввод первого числа в двочиной системе счисления и КОП с матричной мини-клав
				иатуры
    4:				; затем ввод второго числа с PC-клавиатуры
    5:
    6:
    7:				;***************************************************************************************************
				******************************
    8:				;  алгоритм 1
    9:				;***************************************************************************************************
				******************************
   10:
   11:
   12:
   13:
   14:				 	$include (imbaz.h)    ;  объявление всех констант, переменных, буферов, флагов
   15: 1
   16: 1			;***************************************************************************************************
       1			******************************
   17: 1			;  объявление всех констант, переменных, буферов, флагов
   18: 1			;***************************************************************************************************
       1			******************************
   19: 1
   20: 1			; константы .......................
   21: 1
   22: 1	N      0060	stack           equ     60h
   23: 1
   24: 1			;..................................
   25: 1
   26: 1
   27: 1	N	 30	dseg  at 30h
   28: 1
   29: 1    30	N	 11		buf_txt: ds 17
   30: 1    41	N	 01		faza:    ds 1
   31: 1    42	N	 01		h_st:  ds 1
   32: 1    43	N	 01		qq_t:  ds 1
   33: 1
   34: 1				; BUF_L - LOW    - единицы числа
   35: 1				; BUF_M - MIDDLE - десятки числа
   36: 1				; BUF_H - HIGH   - сотни числа
   37: 1
   38: 1    44	N	 01		BUF_1: ds 1

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   39: 1    45	N	 01		BUF_2: ds 1 ; память под 3 разряда 1ого числа
   40: 1    46	N	 01		BUF_X: ds 1
   41: 1
   42: 1    47	N	 01		BUF_COP: ds 1
   43: 1    48	N	 01		BUF_2M: ds 1 ; память под 3 разряда 2ого числа
   44: 1    49	N	 01		BUF_2H: ds 1
   45: 1
   46: 1    4A	N	 01		KOD_KL:  	ds 1 ; ячейка с кодом кнопки              ; для работы с мини-клавиатурой
   47: 1    4B	N	 01		KOD_ST_4: 	ds 1 ; ячейка с номером горизонтали       ; для работы с мини-клавиатурой
   48: 1    4C	N	 01		KOD_DOP: 	ds 1 ; Дополнительная ячейка              ; для работы с мини-клавиатурой
   49: 1    4D	N	 01		KOD_PRM: 	ds 1 ; ячейка приема символа из SBUF      ; для работы с ПК клавиатурой
   50: 1
   51: 1    4E	N	 01		BUF_RESULT_L: ds 1
   52: 1    4F	N	 01		BUF_RESULT_H: ds 1 ; память под 3 разряда 2ого числа
   53: 1    50	N	 01		BUF_3H: ds 1
   54: 1
   55: 1	N	 00	bseg at  0h     ; Сегмент битовых адресов
   56: 1
   57: 1    00	N	 01		F_KL:   DBIT 1      ;  Флаг запроса от кнопок
   58: 1    01	N	 01		f_1s:   DBIT 1      ;  Флаг запроса 1 сек
   59: 1    02	N	 01		FISP:   DBIT 1      ;  Флаг подтверждения нажатия кнопки
   60: 1    03	N	 01		F_KLD:  DBIT 1      ;  Флаг нажатия кнопки
   61: 1    04	N	 01		BITC:   DBIT 1      ;     Бит С для работы 3 алгоритма
   62: 1
   63: 1    05	N	 01		F_neg:   DBIT 1      ;  Флаг число1 > число2
   64: 1    06	N	 01		F_Z:   DBIT 1      ;
   65: 1    07	N	 01		F_L:   DBIT 1      ;
   66: 1
   67:
   68:
   69:		N      0000	cseg at 0       ;  сегмент памяти программ  с 0
   70:
   71:	  0000	02 00 80	    	jmp	 start  ; на начало   программы
   72:
   73:
   74:		N      0003			ORG	0003H		; external interrupt 0 vector
   75:	  0003	32				reti			; undefined
   76:
   77:		N      000B			ORG	000BH		; timer 0 overflow vector
   78:	  000B	02 00 CA			jmp	alg_2		; прерываниее от таймера
   79:
   80:		N      0013			ORG	0013H		; external interrupt 1 vector
   81:	  0013	32				reti			; undefined
   82:
   83:		N      001B			ORG	001BH		; timer 1 overflow vector
   84:	  001B	32				reti			; undefined
   85:
   86:		N      0023			ORG	0023H		; serial I/O interrupt vector
   87:	  0023	32				reti			; undefined
   88:
   89:		N      0080			ORG	0080H		;  адрес начала программы
   90:
   91:	  0080			 start:	  ; начало основной программы
   92:
   93:	  0080	75 81 60		mov	sp, #(stack)	;  инициализация стека
   94:

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

   95:	  0083	12 00 A2		call	ini_   	 	;  инициализация  микропроцессора и всех парметров программы
   96:
   97:	  0086	C2 9C		   	clr ren  		;   запретить прием по  UART
   98:
   99:	  0088	D2 AF			setb	EA   		; общее разрешение прерываний
  100:
  101:	  008A	12 08 87	        call	wiw_start     ; вывод start
  102:	  008D	12 08 78	        call	wiw_mk		; вывод информации о вводе с мини-клавиатуры
  103:
  104:
  105:
  106:				;///////////////////////////////////////////////////////////////////////////////////////////////////
				//////////////////////////////////////////////
  107:
  108:
  109:	  0090			main:    ; начало основного  цикла
  110:
  111:	  0090	30 00 05		jnb F_kl, ma1   ; если запрос от  мини-клавиатуры
  112:	  0093	C2 00		  	clr F_kl  	; сброс флага
  113:	  0095	12 01 8C	 	call  alg_4     ;  ввод первого числа с мини-клавиатуры
  114:
  115:	  0098			ma1:
  116:	  0098	30 98 05		jnb RI, en_main	;
  117:	  009B	C2 98			clr  RI		;
  118:	  009D	12 04 91		call  alg_5     ;
  119:
  120:	  00A0			en_main:                  ;  конец цикла, возврат
  121:
  122:	  00A0	80 EE			jmp	main
  123:
  124:				;.........................................................................................
  125:				;конец и инклуды:
  126:				;.........................................................................................
  127:
  128:				  	$include (ini_.h)     ; инициализация  микропроцессора и всех парметров программы
  129: 1
  130: 1			;***************************************************************************************************
       1			******************************
  131: 1			; п.п инициализации микропроцессора и парамтров программы
  132: 1			;***************************************************************************************************
       1			******************************
  133: 1
  134: 1  00A2			ini_:
  135: 1
  136: 1			;  Настроить режим работы таймера--------------------
  137: 1
  138: 1  00A2	75 89 01	    mov TMOD,#00000001b ;перевести таймер T0 в первый режим работы,
  139: 1			             ;||||||||
  140: 1			             ;||||||++-------Перевести таймер T0 в шестнадцатиразрядный режим работы
  141: 1			             ;|||||+-----------Синхронизироваться от внутреннего генератора
  142: 1			             ;||||+------------Запретить управление таймером от ножки INT0
  143: 1			             ;||++-------------Перевести таймер T1 в тринадцатиразрядный режим
  144: 1			             ;|+----------------Синхронизироваться от внутреннего генератора
  145: 1			             ;+-----------------Запретить управление таймером от ножки INT1
  146: 1
  147: 1  00A5	75 88 10	     mov TCON,#00010000b ;Включить таймер T0

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4



 Line  I  Addr  Code            Source

  148: 1			              ;||||||||
  149: 1			              ;|||||||+-------Прерывание от ножки INT1возникает по фронту
  150: 1			              ;||||||+--------Сбросить запрос прерывания от ножки INT1
  151: 1			              ;|||||+---------Прерывание от ножки INT1возникает по фронту
  152: 1			              ;||||+----------Сбросить запрос прерывания от ножки INT1
  153: 1			              ;|||+-----------Включить таймер T0
  154: 1			              ;||+------------Обнулить флаг таймера T0
  155: 1			              ;|+-------------Включить таймер T1
  156: 1			              ;+--------------Обнулить флаг таймера T1
  157: 1
  158: 1			;  Настроить прерывания --------------------
  159: 1
  160: 1  00A8	75 A8 02	    mov IE,#00000010b ;  разрешение прерываний от таймера T0
  161: 1
  162: 1
  163: 1			;***************************************************************************************************
       1			******************************
  164: 1			;НАСТРОЙКА ПОСЛЕДОВАТЕЛЬНОГО ПОРТА  асинхронный режим, 8 бит данных, скорость 2400 бит/с
  165: 1			;***************************************************************************************************
       1			******************************
  166: 1
  167: 1			;Настроить режим работы последовательного порта-----------------------------------------------------
       1			------------------------------
  168: 1
  169: 1  00AB	75 98 72	 mov SCON,#01110010b                    ;настроить последовательный порт на первый режим работы
  170: 1			          ;||||||||
  171: 1			          ;|||||||+-------Обнулить флаг приёмника RI
  172: 1			          ;||||||+--------Обнулить флаг передатчика TI
  173: 1			          ;|||||+---------Обнулить девятый бит приёмника RB8
  174: 1			          ;||||+----------Обнулить  девятый бит передатчика TB8
  175: 1			          ;|||+-----------Разрешить работу приёмника
  176: 1			          ;||+------------Проверять ошибку кадра (приём нулевого бита на месте стоп-бита)
  177: 1			          ;++-------------Включить асинхронный режим работы последовательного порта
  178: 1
  179: 1  00AE	D2 9C		   setb ren    ;  разрешить работу приемника
  180: 1			  ; clr	ren    ;  запретить работу приемника
  181: 1
  182: 1			;Настроить режим работы таймера T1    --------------------------------------------------------------
       1			--------------------------------
  183: 1
  184: 1			; частота опорного генератора 10 мГц.  коэффициент деления Т1 = 10000000:12:32:2400 = 10,85. Округле
       1			нно - 11
  185: 1			;  при этом скорость передачи = 10000000:12:32:11= 2367 бит/с.  Отклонение от номинала 1,5%.
  186: 1
  187: 1  00B0	53 89 0F	    anl TMOD,#00001111b ;Подготовить таймер T1 к настройке (таймер T0 не трогать!)
  188: 1  00B3	43 89 20	    orl TMOD,#00100000b ;перевести таймер T1 вo второй режим работы (таймер T0 не трогать!)
  189: 1			             ;||||
  190: 1			             ;||++--------------Перевести таймер T1 в режим автозагрузки
  191: 1			             ;|+----------------Синхронизироваться от внутреннего генератора
  192: 1			             ;+-----------------Запретить управление таймером от ножки INT1
  193: 1
  194: 1			; Настроить таймер на генерацию частоты 2367 Гц.   -------------------------------------------------
       1			-------------
  195: 1
  196: 1  00B6	85 F5 8D	    mov TH1, (-11)           ;Загрузить старший байт таймера
  197: 1  00B9	85 F5 8B	    mov TL1, (-11)           ;Загрузить младший байт таймера

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5



 Line  I  Addr  Code            Source

  198: 1  00BC	75 8D F5	    mov TH1, #245
  199: 1  00BF	D2 8E		    setb TR1                 ;Включить таймер 1
  200: 1
  201: 1			;  обнуление памяти данных   -----------------------------
  202: 1
  203: 1			; обнулить 96 ячеек
  204: 1
  205: 1  00C1	78 60			mov r0,#60h    ;  В R0 - число обнуляемых ячеек
  206: 1  00C3	74 00			mov a, #0      ; в  а -  данные для записи: 0
  207: 1  00C5			qq:
  208: 1  00C5	F6			mov @r0,a     ; переслать 0 из а  по адресу из r0
  209: 1  00C6	D8 FD			djnz r0,qq    ; уменьшение r0 с проверкой на равенство 0. если не 0 - поторять
  210: 1  00C8	F6			mov @r0,a     ; переслать 0  по адресу 0
  211: 1
  212: 1
  213: 1  00C9	22			ret
  214:
  215:				 	$include (alg_2.h)    ; прерывание от таймера, проверка мини-клавиатуры
  216: 1
  217: 1			;***************************************************************************************************
       1			******************************
  218: 1
  219: 1			; Алгоритм  2.    п.п. прерывания от таймера.
  220: 1
  221: 1			;***************************************************************************************************
       1			******************************
  222: 1
  223: 1  00CA			alg_2:
  224: 1
  225: 1  00CA	C0 D0			push psw
  226: 1  00CC	FE			mov	r6,a
  227: 1
  228: 1  00CD	D2 D3			setb 	PSW.3   ; перейти в банк 1
  229: 1
  230: 1			; начальное заполнение регистров таймера Т0 для получения периода прерываний 5 мс
  231: 1
  232: 1
  233: 1  00CF	75 8C F4	    mov TH0, #HIGH(-3000)  ;Загрузить старший байт таймера T0
  234: 1  00D2	75 8A 48	    mov TL0, #LOW(-3000)   ;Загрузить младший байт таймера T0
  235: 1
  236: 1
  237: 1
  238: 1
  239: 1			; начало куска ветвления
  240: 1
  241: 1  00D5			al_2_1:
  242: 1
  243: 1  00D5	05 4B			INC KOD_ST_4  		; добалвяем 1 к коду горизонтали мини клавиатуры
  244: 1  00D7	E5 4B			MOV A, KOD_ST_4         ; здесь считаем до 4х
  245: 1
  246: 1  00D9	B4 04 03		CJNE A, #100b, alg_2_2  ;  если код 4 то обнуляем, если нет прыгаем на метку
  247: 1  00DC	75 4B 00		MOV KOD_ST_4, #0
  248: 1
  249: 1  00DF			alg_2_2:
  250: 1						   		; первое нажатие кнопки было?
  251: 1

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 6



 Line  I  Addr  Code            Source

  252: 1  00DF	30 03 11		JNB F_KLD, alg_2_3 		; переходим в алгоритм 3 если F_KLD=0
  253: 1
  254: 1						   	  	 ; если мы остались то делай это
  255: 1  00E2	E5 4B			MOV A, KOD_ST_4
  256: 1  00E4	B5 4C 2F		CJNE A, KOD_DOP,en_alg_2  	 ; сравнение KOD_DOP = KOD_ST_4 ?
  257: 1  00E7	02 00 EA		JMP alg_2_2_1
  258: 1
  259: 1  00EA			alg_2_2_1:
  260: 1
  261: 1  00EA	12 01 1C		call alg_3        ; переходим в алгоритм 3 и получаем обратно Бит С
  262: 1  00ED	20 04 19		JB BITC, alg_2_5  ; если Бит С 1 то переходим
  263: 1  00F0	02 00 F9		JMP alg_2_3_3     ; если Бит С 0 то переходим
  264: 1
  265: 1  00F3			alg_2_3:
  266: 1
  267: 1  00F3	12 01 1C		call alg_3	  ; переходим в алгоритм 3 и получаем обратно Бит С
  268: 1  00F6	20 04 07		JB BITC, alg_2_4  ; если Бит С 1 то переходим
  269: 1						  ; если Бит С 0 то переходим
  270: 1  00F9			alg_2_3_3:
  271: 1
  272: 1  00F9	C2 02			CLR FISP    ;очищаем флаги и уходим в конец алгоритма 2
  273: 1  00FB	C2 03			CLR F_KLD
  274: 1  00FD	02 01 16		JMP en_alg_2
  275: 1
  276: 1  0100			alg_2_4:
  277: 1  0100	D2 03			  SETB F_KLD        ; устанавливаем флаг
  278: 1  0102	E5 4B			  MOV A, KOD_ST_4   ; записываем в KOD_DOP номер горизонтали
  279: 1  0104	F5 4C			  MOV KOD_DOP, A
  280: 1  0106	02 01 16		  JMP en_alg_2
  281: 1
  282: 1  0109			alg_2_5:
  283: 1
  284: 1  0109	20 02 0A		JB FISP,en_alg_2    ; нажатие кнопки было подтверждено?
  285: 1  010C	12 09 26		call tab_m_k        ; вызов алгоритма 10
  286: 1  010F	D2 02			SETB FISP	    ; устанавливаем 1 в нужные флаги
  287: 1  0111	D2 00			SETB F_KL
  288: 1
  289: 1  0113	02 01 16		JMP en_alg_2
  290: 1
  291: 1  0116			en_alg_2:       ;  конец обработки прерывания
  292: 1
  293: 1
  294: 1  0116	C2 D3			clr	PSW.3   ; вернуться в банк 0
  295: 1  0118	EE			mov	a,r6
  296: 1  0119	D0 D0			pop	psw
  297: 1
  298: 1  011B	32			reti
  299:
  300:				 	$include (alg_3.h)    ; Подрограмма Проверки запроса от мини клавиатуры 3х3
  301: 1
  302: 1			;***************************************************************************************************
       1			******************************
  303: 1			;  alg_3 - ;  определение кода кнопки числа с мини-клавиатуры
  304: 1			;***************************************************************************************************
       1			******************************
  305: 1

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 7



 Line  I  Addr  Code            Source

  306: 1
  307: 1  011C			alg_3:
  308: 1
  309: 1
  310: 1			; передача 0 в порт на нужную горизонталь
  311: 1
  312: 1  011C	E5 4B			MOV A, KOD_ST_4
  313: 1  011E	D2 9C			setb ren
  314: 1
  315: 1  0120	B4 00 06		CJNE A, #00b, alg_3_01 ;   если горизонталь 0 то в P1.4 0
  316: 1  0123	75 90 EF		MOV P1, #11101111b
  317: 1  0126	02 01 41		JMP alg_3_XX
  318: 1
  319: 1  0129			alg_3_01:
  320: 1  0129	B4 01 06		CJNE A, #01b, alg_3_10 ;    если горизонталь 1 то в P1.5 0
  321: 1  012C	75 90 DF		MOV P1, #11011111b
  322: 1  012F	02 01 41		JMP alg_3_XX
  323: 1
  324: 1  0132			alg_3_10:
  325: 1  0132	B4 02 06		CJNE A, #10b, alg_3_11 ;    если горизонталь 2 то в P1.6 0
  326: 1  0135	75 90 BF		MOV P1, #10111111b
  327: 1  0138	02 01 41		JMP alg_3_XX
  328: 1
  329: 1  013B			alg_3_11:
  330: 1  013B	B4 03 03		CJNE A, #11b, alg_3_XX ;    если горизонталь 3 то в P1.7 0
  331: 1  013E	75 90 7F		MOV P1, #01111111b
  332: 1
  333: 1  0141			alg_3_XX:
  334: 1
  335: 1  0141	20 90 03	 	JB P1.0, j_3		; здесь я делаю проверку на все 0, ибо тогда можно сразу уйти в коне
       1			ц алгоритма
  336: 1  0144	02 01 58		JMP alg_3_3_0		;...................................................................
       1			...........
  337: 1  0147			j_3:
  338: 1  0147	20 91 03		JB P1.1, j_31		;...................................................................
       1			.
  339: 1  014A	02 01 58		JMP alg_3_3_0		;..........................................................
  340: 1  014D			j_31:
  341: 1  014D	20 92 03		JB P1.2, j_32		;................................................
  342: 1  0150	02 01 58		JMP alg_3_3_0		;......................................
  343: 1  0153			j_32:
  344: 1  0153	C2 04			CLR BITC		;................................................
  345: 1  0155	02 01 8B		JMP alg_3_3_XX		;..........................................................
  346: 1
  347: 1  0158			alg_3_3_0:
  348: 1
  349: 1  0158	20 90 0E		JB P1.0, alg_3_3_1     	;  если P1.0 0 то выстави
  350: 1  015B	75 4A 00		MOV KOD_KL, #00000000b 	;  запись в 2,3 разряды 00
  351: 1  015E	E5 4A			MOV A, KOD_KL		; сложение с KOD_ST_4
  352: 1  0160	25 4B			ADD A, KOD_ST_4
  353: 1  0162	F5 4A			MOV KOD_KL, A
  354: 1  0164	D2 04			SETB BITC               ; устанавливаем Бит С
  355: 1  0166	02 01 8B		JMP alg_3_3_XX
  356: 1
  357: 1  0169			alg_3_3_1:
  358: 1

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 8



 Line  I  Addr  Code            Source

  359: 1  0169	20 91 0E		JB P1.1, alg_3_3_2      ;  если P1.1 0 то выстави
  360: 1  016C	75 4A 04		MOV KOD_KL, #00000100b  ;  запись в 2,3 разряды 01
  361: 1  016F	E5 4A			MOV A, KOD_KL		; сложение с KOD_ST_4
  362: 1  0171	25 4B			ADD A, KOD_ST_4
  363: 1  0173	F5 4A			MOV KOD_KL, A
  364: 1  0175	D2 04			SETB BITC               ; устанавливаем Бит С
  365: 1  0177	02 01 8B		JMP alg_3_3_XX
  366: 1
  367: 1  017A			alg_3_3_2:
  368: 1
  369: 1  017A	20 92 0E		JB P1.2, alg_3_3_XX     ; если P1.2 0 то выстави
  370: 1  017D	75 4A 08		MOV KOD_KL, #00001000b  ; запись в 2,3 разряды 10
  371: 1  0180	E5 4A			MOV A, KOD_KL		; сложение с KOD_ST_4
  372: 1  0182	25 4B			ADD A, KOD_ST_4
  373: 1  0184	F5 4A			MOV KOD_KL, A
  374: 1  0186	D2 04			SETB BITC               ; устанавливаем Бит С
  375: 1  0188	02 01 8B		JMP alg_3_3_XX
  376: 1
  377: 1
  378: 1  018B			alg_3_3_XX:
  379: 1
  380: 1  018B	22		ret
  381:
  382:				 	$include (alg_4.h)    ; Подрограмма Проверкт ввода 1 числа с мини клавиатуры
  383: 1
  384: 1
  385: 1			;***************************************************************************************************
       1			******************************
  386: 1			;  alg_4 - ;  ввод первого числа с мини-клавиатуры
  387: 1			;***************************************************************************************************
       1			******************************
  388: 1
  389: 1  018C			alg_4:
  390: 1  018C	C2 00			CLR     F_KL        		; обнуление флага F_KL
  391: 1  018E	E5 4A			mov a, KOD_KL			; перегруз
  392: 1  0190	F5 99			mov sbuf, a
  393: 1
  394: 1
  395: 1
  396: 1  0192			faza0: ;//////////////////////////////////////////////////////////////
  397: 1
  398: 1  0192	E5 41			MOV A ,FAZA   	   	        ; загрузка фазы в аккум
  399: 1  0194	B4 00 55		CJNE A, #0, faza1     		; проверка на 0 faza, если да то уходим
  400: 1
  401: 1  0197	E5 4A			MOV A, KOD_KL
  402: 1
  403: 1
  404: 1			;////////........................................
  405: 1			; ПРОВЕРКА НА НЕДОПУСТИМЫЕ ЗНАЧЕНИЯ ПРИ 1 НАЖАТИИ
  406: 1			;///////.........................................
  407: 1
  408: 1  0199	B4 2B 03		CJNE A, #0101011b , faza_Proverka1	; проверка на + и уход
  409: 1  019C	02 04 7F		JMP R_RESTART_R	                         ; уход
  410: 1
  411: 1  019F			faza_Proverka1:
  412: 1  019F	B4 2D 03		CJNE A, #0101101b , faza_Proverka2	; проверка на - и уход

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 9



 Line  I  Addr  Code            Source

  413: 1  01A2	02 04 7F		JMP R_RESTART_R	                         ; уход
  414: 1  01A5			faza_Proverka2:
  415: 1  01A5	B4 2F 03		CJNE A, #0101111b , faza_Proverka3	; проверка на / и уход
  416: 1  01A8	02 04 7F		JMP R_RESTART_R	                         ; уход
  417: 1  01AB			faza_Proverka3:
  418: 1  01AB	B4 2A 03		CJNE A, #0101010b , faza_Proverka4	; проверка на * и уход
  419: 1  01AE	02 04 7F		JMP R_RESTART_R	                         ; уход
  420: 1  01B1			faza_Proverka4:
  421: 1  01B1	B4 52 03		CJNE A, #1010010b , faza_Proverka5	; проверка на R и уход
  422: 1  01B4	02 04 7F		JMP R_RESTART_R	                         ; уход
  423: 1  01B7			faza_Proverka5:
  424: 1  01B7	B4 43 03		CJNE A, #1000011b , faza_Proverka6	; проверка на C и уход
  425: 1  01BA	02 04 7F		JMP R_RESTART_R	                         ; уход
  426: 1  01BD			faza_Proverka6:
  427: 1  01BD	B4 3D 03		CJNE A, #0111101b , faza0_DO		; проверка на = и уход
  428: 1  01C0	02 04 7F		JMP R_RESTART_R	                         ; уход
  429: 1
  430: 1  01C3			faza0_DO:
  431: 1
  432: 1  01C3	75 41 01		MOV FAZA, #1			; переводим фазу в 1
  433: 1  01C6	12 09 11		call clr_buf_txt
  434: 1
  435: 1
  436: 1
  437: 1  01C9	78 30			mov	r0,#buf_txt     ;  указатель места на начало буфера текста
  438: 1
  439: 1  01CB	74 0D			mov	a,#0dh
  440: 1  01CD	F5 30			mov     buf_txt,a
  441: 1
  442: 1
  443: 1  01CF	E5 4A			mov	a,kod_kl      		; записываем цифру в BUF_TXT
  444: 1
  445: 1  01D1	24 30			add	a,#30h		; перевод в ASCII прибавлением 30
  446: 1  01D3	F5 31			mov     buf_txt+1,a
  447: 1
  448: 1
  449: 1				;///////////////////////
  450: 1				; проверка на 30 или 31
  451: 1				;///////////////////////
  452: 1
  453: 1  01D5	E5 4A			mov	a,kod_kl      		; записываем в акум
  454: 1
  455: 1  01D7	B4 00 09		CJNE A, #0, IDEL_31    ;///// сама проверка
  456: 1
  457: 1  01DA			IDEL_30:
  458: 1
  459: 1  01DA	E5 44			mov	a,BUF_1
  460: 1  01DC	C3			CLR C
  461: 1  01DD	33			RLC A
  462: 1  01DE	F5 44			mov	BUF_1,A
  463: 1
  464: 1  01E0	02 04 8D		JMP END_alg_4
  465: 1
  466: 1  01E3			IDEL_31:
  467: 1
  468: 1  01E3	E5 44			mov	a,BUF_1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 10



 Line  I  Addr  Code            Source

  469: 1  01E5	D3			SETB C
  470: 1  01E6	33			RLC A
  471: 1  01E7	F5 44			mov	BUF_1,A
  472: 1  01E9	02 04 8D		JMP END_alg_4
  473: 1
  474: 1
  475: 1  01EC			faza1: ;//////////////////////////////////////////////////////////////
  476: 1
  477: 1  01EC	E5 41			MOV A ,FAZA   	   	        ; загрузка фазы в аккум
  478: 1  01EE	B4 01 51		CJNE A, #1, faza2    		; проверка на 1 faza, если да то уходим
  479: 1
  480: 1  01F1	E5 4A			MOV A, KOD_KL
  481: 1
  482: 1  01F3	B4 2B 03		CJNE A, #0101011b , faza_Proverka1_1	; проверка на + и уход
  483: 1  01F6	02 04 69		JMP A_A                         	; уход
  484: 1  01F9			faza_Proverka1_1:
  485: 1  01F9	B4 2D 03		CJNE A, #0101101b , faza_Proverka2_1	; проверка на - и уход
  486: 1  01FC	02 04 69		JMP A_A	                         	; уход
  487: 1  01FF			faza_Proverka2_1:
  488: 1  01FF	B4 2F 03		CJNE A, #0101111b , faza_Proverka3_1	; проверка на / и уход
  489: 1  0202	02 04 69		JMP A_A		                        ; уход
  490: 1  0205			faza_Proverka3_1:
  491: 1  0205	B4 2A 03		CJNE A, #0101010b , faza_Proverka4_1		; проверка на * и уход
  492: 1  0208	02 04 69		JMP A_A	                         	; уход
  493: 1			;////////////////////////////////////////////////////////////////
  494: 1  020B			faza_Proverka4_1:
  495: 1  020B	B4 52 03		CJNE A, #1010010b , faza_Proverka5_1	; проверка на R и уход
  496: 1  020E	02 04 7F		JMP R_RESTART_R	                         ; уход
  497: 1  0211			faza_Proverka5_1:
  498: 1  0211	B4 43 08		CJNE A, #1000011b , faza_Proverka6_1	; проверка на C и уход
  499: 1  0214	75 41 00		MOV FAZA, #0
  500: 1  0217	75 44 00		MOV BUF_1, #0
  501: 1  021A	01 90			JMP main	                         ; уход
  502: 1  021C			faza_Proverka6_1:
  503: 1  021C	B4 3D 03		CJNE A, #0111101b , faza1_DO		; проверка на = и уход
  504: 1  021F	02 04 7F		JMP R_RESTART_R	                         ; уход
  505: 1
  506: 1  0222			faza1_DO:
  507: 1
  508: 1  0222	75 41 02		MOV FAZA, #2			; переводим фазу в 2
  509: 1
  510: 1  0225	E5 4A			mov	a,kod_kl      		; записываем цифру в BUF_TXT
  511: 1
  512: 1  0227	24 30			add	a,#30h		; перевод в ASCII прибавлением 30
  513: 1  0229	F5 32			mov     buf_txt+2,a
  514: 1
  515: 1
  516: 1				;///////////////////////
  517: 1				; проверка на 30 или 31
  518: 1				;///////////////////////
  519: 1
  520: 1  022B	E5 4A			mov	a,kod_kl      		; записываем в акум
  521: 1
  522: 1  022D	B4 00 B3		CJNE A, #0, IDEL_31    ;///// сама проверка
  523: 1
  524: 1  0230			IDEL_30_1:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 11



 Line  I  Addr  Code            Source

  525: 1
  526: 1  0230	E5 44			mov	a,BUF_1
  527: 1  0232	C3			CLR C
  528: 1  0233	33			RLC A
  529: 1  0234	F5 44			mov	BUF_1,A
  530: 1
  531: 1  0236	02 04 8D		JMP END_alg_4
  532: 1
  533: 1  0239			IDEL_31_1:
  534: 1
  535: 1  0239	E5 44			mov	a,BUF_1
  536: 1  023B	D3			SETB C
  537: 1  023C	33			RLC A
  538: 1  023D	F5 44			mov	BUF_1,A
  539: 1  023F	02 04 8D		JMP END_alg_4
  540: 1
  541: 1
  542: 1  0242			faza2: ;//////////////////////////////////////////////////////////////
  543: 1
  544: 1  0242	E5 41			MOV A ,FAZA   	   	        ; загрузка фазы в аккум
  545: 1  0244	B4 02 51		CJNE A, #2, faza3    		; проверка на 1 faza, если да то уходим
  546: 1
  547: 1  0247	E5 4A			MOV A, KOD_KL
  548: 1
  549: 1  0249	B4 2B 03		CJNE A, #0101011b , faza_Proverka1_2	; проверка на + и уход
  550: 1  024C	02 04 69		JMP A_A                         	; уход
  551: 1  024F			faza_Proverka1_2:
  552: 1  024F	B4 2D 03		CJNE A, #0101101b , faza_Proverka2_2	; проверка на - и уход
  553: 1  0252	02 04 69		JMP A_A	                         	; уход
  554: 1  0255			faza_Proverka2_2:
  555: 1  0255	B4 2F 03		CJNE A, #0101111b , faza_Proverka3_2	; проверка на / и уход
  556: 1  0258	02 04 69		JMP A_A		                        ; уход
  557: 1  025B			faza_Proverka3_2:
  558: 1  025B	B4 2A 03		CJNE A, #0101010b , faza_Proverka4_2		; проверка на * и уход
  559: 1  025E	02 04 69		JMP A_A	                         	; уход
  560: 1			;////////////////////////////////////////////////////////////////
  561: 1  0261			faza_Proverka4_2:
  562: 1  0261	B4 52 03		CJNE A, #1010010b , faza_Proverka5_2	; проверка на R и уход
  563: 1  0264	02 04 7F		JMP R_RESTART_R	                         ; уход
  564: 1  0267			faza_Proverka5_2:
  565: 1  0267	B4 43 08		CJNE A, #1000011b , faza_Proverka6_2	; проверка на C и уход
  566: 1  026A	75 41 00		MOV FAZA, #0
  567: 1  026D	75 44 00		MOV BUF_1, #0
  568: 1  0270	01 90			JMP main	                         ; уход
  569: 1  0272			faza_Proverka6_2:
  570: 1  0272	B4 3D 03		CJNE A, #0111101b , faza2_DO		; проверка на = и уход
  571: 1  0275	02 04 7F		JMP R_RESTART_R	                         ; уход
  572: 1  0278			faza2_DO:
  573: 1
  574: 1  0278	75 41 03		MOV FAZA, #3			; переводим фазу в 3
  575: 1
  576: 1  027B	E5 4A			mov	a,kod_kl      		; записываем цифру в BUF_TXT
  577: 1
  578: 1  027D	24 30			add	a,#30h		; перевод в ASCII прибавлением 30
  579: 1  027F	F5 33			mov     buf_txt+3,a
  580: 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 12



 Line  I  Addr  Code            Source

  581: 1
  582: 1				;///////////////////////
  583: 1				; проверка на 30 или 31
  584: 1				;///////////////////////
  585: 1
  586: 1  0281	E5 4A			mov	a,kod_kl      		; записываем в акум
  587: 1
  588: 1  0283	B4 00 09		CJNE A, #0, IDEL_31_2    ;///// сама проверка
  589: 1
  590: 1  0286			IDEL_30_2:
  591: 1
  592: 1  0286	E5 44			mov	a,BUF_1
  593: 1  0288	C3			CLR C
  594: 1  0289	33			RLC A
  595: 1  028A	F5 44			mov	BUF_1,A
  596: 1
  597: 1  028C	02 04 8D		JMP END_alg_4
  598: 1
  599: 1  028F			IDEL_31_2:
  600: 1
  601: 1  028F	E5 44			mov	a,BUF_1
  602: 1  0291	D3			SETB C
  603: 1  0292	33			RLC A
  604: 1  0293	F5 44			mov	BUF_1,A
  605: 1  0295	02 04 8D		JMP END_alg_4
  606: 1
  607: 1
  608: 1  0298			faza3: ;//////////////////////////////////////////////////////////////
  609: 1
  610: 1  0298	E5 41			MOV A ,FAZA   	   	        ; загрузка фазы в аккум
  611: 1  029A	B4 03 51		CJNE A, #3, faza4    		; проверка на 1 faza, если да то уходим
  612: 1
  613: 1  029D	E5 4A			MOV A, KOD_KL
  614: 1
  615: 1  029F	B4 2B 03		CJNE A, #0101011b , faza_Proverka1_3	; проверка на + и уход
  616: 1  02A2	02 04 69		JMP A_A                         	; уход
  617: 1  02A5			faza_Proverka1_3:
  618: 1  02A5	B4 2D 03		CJNE A, #0101101b , faza_Proverka2_3	; проверка на - и уход
  619: 1  02A8	02 04 69		JMP A_A	                         	; уход
  620: 1  02AB			faza_Proverka2_3:
  621: 1  02AB	B4 2F 03		CJNE A, #0101111b , faza_Proverka3_3	; проверка на / и уход
  622: 1  02AE	02 04 69		JMP A_A		                        ; уход
  623: 1  02B1			faza_Proverka3_3:
  624: 1  02B1	B4 2A 03		CJNE A, #0101010b , faza_Proverka4_3		; проверка на * и уход
  625: 1  02B4	02 04 69		JMP A_A
  626: 1			;////////////////////////////////////////////////////////////////
  627: 1  02B7			faza_Proverka4_3:
  628: 1  02B7	B4 52 03		CJNE A, #1010010b , faza_Proverka5_3	; проверка на R и уход
  629: 1  02BA	02 04 7F		JMP R_RESTART_R	                         ; уход
  630: 1  02BD			faza_Proverka5_3:
  631: 1  02BD	B4 43 08		CJNE A, #1000011b , faza_Proverka6_3	; проверка на C и уход
  632: 1  02C0	75 41 00		MOV FAZA, #0
  633: 1  02C3	75 44 00		MOV BUF_1, #0
  634: 1  02C6	01 90			JMP main	                         ; уход
  635: 1  02C8			faza_Proverka6_3:
  636: 1  02C8	B4 3D 03		CJNE A, #0111101b , faza3_DO		; проверка на = и уход

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 13



 Line  I  Addr  Code            Source

  637: 1  02CB	02 04 7F		JMP R_RESTART_R	                         ; уход
  638: 1  02CE			faza3_DO:
  639: 1
  640: 1  02CE	75 41 04		MOV FAZA, #4			; переводим фазу в 4
  641: 1
  642: 1  02D1	E5 4A			mov	a,kod_kl      		; записываем цифру в BUF_TXT
  643: 1
  644: 1  02D3	24 30			add	a,#30h		; перевод в ASCII прибавлением 30
  645: 1  02D5	F5 34			mov     buf_txt+4,a
  646: 1
  647: 1
  648: 1				;///////////////////////
  649: 1				; проверка на 30 или 31
  650: 1				;///////////////////////
  651: 1
  652: 1  02D7	E5 4A			mov	a,kod_kl      		; записываем в акум
  653: 1
  654: 1  02D9	B4 00 09		CJNE A, #0, IDEL_31_3    ;///// сама проверка
  655: 1
  656: 1  02DC			IDEL_30_3:
  657: 1
  658: 1  02DC	E5 44			mov	a,BUF_1
  659: 1  02DE	C3			CLR C
  660: 1  02DF	33			RLC A
  661: 1  02E0	F5 44			mov	BUF_1,A
  662: 1
  663: 1  02E2	02 04 8D		JMP END_alg_4
  664: 1
  665: 1  02E5			IDEL_31_3:
  666: 1
  667: 1  02E5	E5 44			mov	a,BUF_1
  668: 1  02E7	D3			SETB C
  669: 1  02E8	33			RLC A
  670: 1  02E9	F5 44			mov	BUF_1,A
  671: 1  02EB	02 04 8D		JMP END_alg_4
  672: 1
  673: 1
  674: 1  02EE			faza4: ;//////////////////////////////////////////////////////////////
  675: 1
  676: 1  02EE	E5 41			MOV A ,FAZA   	   	        ; загрузка фазы в аккум
  677: 1  02F0	B4 04 51		CJNE A, #4, faza5    		; проверка на 1 faza, если да то уходим
  678: 1
  679: 1  02F3	E5 4A			MOV A, KOD_KL
  680: 1
  681: 1  02F5	B4 2B 03		CJNE A, #0101011b , faza_Proverka1_4	; проверка на + и уход
  682: 1  02F8	02 04 69		JMP A_A                         	; уход
  683: 1  02FB			faza_Proverka1_4:
  684: 1  02FB	B4 2D 03		CJNE A, #0101101b , faza_Proverka2_4	; проверка на - и уход
  685: 1  02FE	02 04 69		JMP A_A	                         	; уход
  686: 1  0301			faza_Proverka2_4:
  687: 1  0301	B4 2F 03		CJNE A, #0101111b , faza_Proverka3_4	; проверка на / и уход
  688: 1  0304	02 04 69		JMP A_A		                        ; уход
  689: 1  0307			faza_Proverka3_4:
  690: 1  0307	B4 2A 03		CJNE A, #0101010b , faza_Proverka4_4		; проверка на * и уход
  691: 1  030A	02 04 69		JMP A_A
  692: 1			;////////////////////////////////////////////////////////////////

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 14



 Line  I  Addr  Code            Source

  693: 1  030D			faza_Proverka4_4:
  694: 1  030D	B4 52 03		CJNE A, #1010010b , faza_Proverka5_4	; проверка на R и уход
  695: 1  0310	02 04 7F		JMP R_RESTART_R	                         ; уход
  696: 1  0313			faza_Proverka5_4:
  697: 1  0313	B4 43 08		CJNE A, #1000011b , faza_Proverka6_4	; проверка на C и уход
  698: 1  0316	75 41 00		MOV FAZA, #0
  699: 1  0319	75 44 00		MOV BUF_1, #0
  700: 1  031C	01 90			JMP main	                         ; уход
  701: 1  031E			faza_Proverka6_4:
  702: 1  031E	B4 3D 03		CJNE A, #0111101b , faza4_DO		; проверка на = и уход
  703: 1  0321	02 04 7F		JMP R_RESTART_R	                         ; уход
  704: 1  0324			faza4_DO:
  705: 1
  706: 1  0324	75 41 05		MOV FAZA, #5			; переводим фазу в 4
  707: 1
  708: 1  0327	E5 4A			mov	a,kod_kl      		; записываем цифру в BUF_TXT
  709: 1
  710: 1  0329	24 30			add	a,#30h		; перевод в ASCII прибавлением 30
  711: 1  032B	F5 35			mov     buf_txt+5,a
  712: 1
  713: 1
  714: 1				;///////////////////////
  715: 1				; проверка на 30 или 31
  716: 1				;///////////////////////
  717: 1
  718: 1  032D	E5 4A			mov	a,kod_kl      		; записываем в акум
  719: 1
  720: 1  032F	B4 00 09		CJNE A, #0, IDEL_31_4    ;///// сама проверка
  721: 1
  722: 1  0332			IDEL_30_4:
  723: 1
  724: 1  0332	E5 44			mov	a,BUF_1
  725: 1  0334	C3			CLR C
  726: 1  0335	33			RLC A
  727: 1  0336	F5 44			mov	BUF_1,A
  728: 1
  729: 1  0338	02 04 8D		JMP END_alg_4
  730: 1
  731: 1  033B			IDEL_31_4:
  732: 1
  733: 1  033B	E5 44			mov	a,BUF_1
  734: 1  033D	D3			SETB C
  735: 1  033E	33			RLC A
  736: 1  033F	F5 44			mov	BUF_1,A
  737: 1  0341	02 04 8D		JMP END_alg_4
  738: 1
  739: 1
  740: 1  0344			faza5: ;//////////////////////////////////////////////////////////////
  741: 1
  742: 1  0344	E5 41			MOV A , FAZA   	   	        ; загрузка фазы в аккум
  743: 1  0346	B4 05 51		CJNE A, #5, faza6    		; проверка на 1 faza, если да то уходим
  744: 1
  745: 1  0349	E5 4A			MOV A, KOD_KL
  746: 1
  747: 1  034B	B4 2B 03		CJNE A, #0101011b , faza_Proverka1_5	; проверка на + и уход
  748: 1  034E	02 04 69		JMP A_A                         	; уход

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 15



 Line  I  Addr  Code            Source

  749: 1  0351			faza_Proverka1_5:
  750: 1  0351	B4 2D 03		CJNE A, #0101101b , faza_Proverka2_5	; проверка на - и уход
  751: 1  0354	02 04 69		JMP A_A	                         	; уход
  752: 1  0357			faza_Proverka2_5:
  753: 1  0357	B4 2F 03		CJNE A, #0101111b , faza_Proverka3_5	; проверка на / и уход
  754: 1  035A	02 04 69		JMP A_A		                        ; уход
  755: 1  035D			faza_Proverka3_5:
  756: 1  035D	B4 2A 03		CJNE A, #0101010b , faza_Proverka4_5		; проверка на * и уход
  757: 1  0360	02 04 69		JMP A_A
  758: 1			;////////////////////////////////////////////////////////////////
  759: 1  0363			faza_Proverka4_5:
  760: 1  0363	B4 52 03		CJNE A, #1010010b , faza_Proverka5_5	; проверка на R и уход
  761: 1  0366	02 04 7F		JMP R_RESTART_R	                         ; уход
  762: 1  0369			faza_Proverka5_5:
  763: 1  0369	B4 43 08		CJNE A, #1000011b , faza_Proverka6_5	; проверка на C и уход
  764: 1  036C	75 41 00		MOV FAZA, #0
  765: 1  036F	75 44 00		MOV BUF_1, #0
  766: 1  0372	01 90			JMP main	                         ; уход
  767: 1  0374			faza_Proverka6_5:
  768: 1  0374	B4 3D 03		CJNE A, #0111101b , faza5_DO		; проверка на = и уход
  769: 1  0377	02 04 7F		JMP R_RESTART_R
  770: 1
  771: 1  037A			faza5_DO:
  772: 1
  773: 1
  774: 1
  775: 1  037A	E5 4A			mov	a,kod_kl      		; записываем цифру в BUF_TXT
  776: 1
  777: 1  037C	24 30			add	a,#30h		; перевод в ASCII прибавлением 30
  778: 1  037E	F5 36			mov     buf_txt+6,a
  779: 1
  780: 1  0380	75 41 06		MOV FAZA, #6			; переводим фазу в 4
  781: 1
  782: 1				;///////////////////////
  783: 1				; проверка на 30 или 31
  784: 1				;///////////////////////
  785: 1
  786: 1  0383	E5 4A			mov	a,kod_kl      		; записываем в акум
  787: 1
  788: 1  0385	B4 00 09		CJNE A, #0, IDEL_31_5    ;///// сама проверка
  789: 1
  790: 1  0388			IDEL_30_5:
  791: 1
  792: 1  0388	E5 44			mov	a,BUF_1
  793: 1  038A	C3			CLR C
  794: 1  038B	33			RLC A
  795: 1  038C	F5 44			mov	BUF_1,A
  796: 1
  797: 1  038E	02 04 8D		JMP END_alg_4
  798: 1
  799: 1  0391			IDEL_31_5:
  800: 1
  801: 1  0391	E5 44			mov	a,BUF_1
  802: 1  0393	D3			SETB C
  803: 1  0394	33			RLC A
  804: 1  0395	F5 44			mov	BUF_1,A

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 16



 Line  I  Addr  Code            Source

  805: 1  0397	02 04 8D		JMP END_alg_4
  806: 1
  807: 1
  808: 1  039A			faza6: ;//////////////////////////////////////////////////////////////
  809: 1
  810: 1  039A	E5 41			MOV A ,FAZA   	   	        ; загрузка фазы в аккум
  811: 1  039C	B4 06 51		CJNE A, #6, faza7    		; проверка на 1 faza, если да то уходим
  812: 1
  813: 1  039F	E5 4A			MOV A, KOD_KL
  814: 1
  815: 1  03A1	B4 2B 03		CJNE A, #0101011b , faza_Proverka1_6	; проверка на + и уход
  816: 1  03A4	02 04 69		JMP A_A                         	; уход
  817: 1  03A7			faza_Proverka1_6:
  818: 1  03A7	B4 2D 03		CJNE A, #0101101b , faza_Proverka2_6	; проверка на - и уход
  819: 1  03AA	02 04 69		JMP A_A	                         	; уход
  820: 1  03AD			faza_Proverka2_6:
  821: 1  03AD	B4 2F 03		CJNE A, #0101111b , faza_Proverka3_6	; проверка на / и уход
  822: 1  03B0	02 04 69		JMP A_A		                        ; уход
  823: 1  03B3			faza_Proverka3_6:
  824: 1  03B3	B4 2A 03		CJNE A, #0101010b , faza_Proverka4_6		; проверка на * и уход
  825: 1  03B6	02 04 69		JMP A_A
  826: 1			;////////////////////////////////////////////////////////////////
  827: 1  03B9			faza_Proverka4_6:
  828: 1  03B9	B4 52 03		CJNE A, #1010010b , faza_Proverka5_6	; проверка на R и уход
  829: 1  03BC	02 04 7F		JMP R_RESTART_R	                         ; уход
  830: 1  03BF			faza_Proverka5_6:
  831: 1  03BF	B4 43 08		CJNE A, #1000011b , faza_Proverka6_6	; проверка на C и уход
  832: 1  03C2	75 41 00		MOV FAZA, #0
  833: 1  03C5	75 44 00		MOV BUF_1, #0
  834: 1  03C8	01 90			JMP main	                         ; уход
  835: 1  03CA			faza_Proverka6_6:
  836: 1  03CA	B4 3D 03		CJNE A, #0111101b , faza6_DO		; проверка на = и уход
  837: 1  03CD	02 04 7F		JMP R_RESTART_R
  838: 1
  839: 1  03D0			faza6_DO:
  840: 1
  841: 1  03D0	75 41 07		MOV FAZA, #7			; переводим фазу в 4
  842: 1
  843: 1  03D3	E5 4A			mov	a,kod_kl      		; записываем цифру в BUF_TXT
  844: 1
  845: 1  03D5	24 30			add	a,#30h		; перевод в ASCII прибавлением 30
  846: 1  03D7	F5 37			mov     buf_txt+7,a
  847: 1
  848: 1
  849: 1				;///////////////////////
  850: 1				; проверка на 30 или 31
  851: 1				;///////////////////////
  852: 1
  853: 1  03D9	E5 4A			mov	a,kod_kl      		; записываем в акум
  854: 1
  855: 1  03DB	B4 00 09		CJNE A, #0, IDEL_31_6    ;///// сама проверка
  856: 1
  857: 1  03DE			IDEL_30_6:
  858: 1
  859: 1  03DE	E5 44			mov	a,BUF_1
  860: 1  03E0	C3			CLR C

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 17



 Line  I  Addr  Code            Source

  861: 1  03E1	33			RLC A
  862: 1  03E2	F5 44			mov	BUF_1,A
  863: 1
  864: 1  03E4	02 04 8D		JMP END_alg_4
  865: 1
  866: 1  03E7			IDEL_31_6:
  867: 1
  868: 1  03E7	E5 44			mov	a,BUF_1
  869: 1  03E9	D3			SETB C
  870: 1  03EA	33			RLC A
  871: 1  03EB	F5 44			mov	BUF_1,A
  872: 1  03ED	02 04 8D		JMP END_alg_4
  873: 1
  874: 1
  875: 1  03F0			faza7: ;//////////////////////////////////////////////////////////////
  876: 1
  877: 1  03F0	E5 41			MOV A ,FAZA   	   	        ; загрузка фазы в аккум
  878: 1  03F2	B4 07 51		CJNE A, #7, faza8    		; проверка на 1 faza, если да то уходим
  879: 1
  880: 1  03F5	E5 4A			MOV A, KOD_KL
  881: 1
  882: 1  03F7	B4 2B 03		CJNE A, #0101011b , faza_Proverka1_7	; проверка на + и уход
  883: 1  03FA	02 04 69		JMP A_A                         	; уход
  884: 1  03FD			faza_Proverka1_7:
  885: 1  03FD	B4 2D 03		CJNE A, #0101101b , faza_Proverka2_7	; проверка на - и уход
  886: 1  0400	02 04 69		JMP A_A	                         	; уход
  887: 1  0403			faza_Proverka2_7:
  888: 1  0403	B4 2F 03		CJNE A, #0101111b , faza_Proverka3_7	; проверка на / и уход
  889: 1  0406	02 04 69		JMP A_A		                        ; уход
  890: 1  0409			faza_Proverka3_7:
  891: 1  0409	B4 2A 03		CJNE A, #0101010b , faza_Proverka4_7		; проверка на * и уход
  892: 1  040C	02 04 69		JMP A_A
  893: 1			;////////////////////////////////////////////////////////////////
  894: 1  040F			faza_Proverka4_7:
  895: 1  040F	B4 52 03		CJNE A, #1010010b , faza_Proverka5_7	; проверка на R и уход
  896: 1  0412	02 04 7F		JMP R_RESTART_R	                         ; уход
  897: 1  0415			faza_Proverka5_7:
  898: 1  0415	B4 43 08		CJNE A, #1000011b , faza_Proverka6_7	; проверка на C и уход
  899: 1  0418	75 41 00		MOV FAZA, #0
  900: 1  041B	75 44 00		MOV BUF_1, #0
  901: 1  041E	01 90			JMP main	                         ; уход
  902: 1  0420			faza_Proverka6_7:
  903: 1  0420	B4 3D 03		CJNE A, #0111101b , faza7_DO		; проверка на = и уход
  904: 1  0423	02 04 7F		JMP R_RESTART_R
  905: 1
  906: 1  0426			faza7_DO:
  907: 1
  908: 1  0426	E5 4A			mov	a,kod_kl      		; записываем цифру в BUF_TXT
  909: 1
  910: 1  0428	24 30			add	a,#30h		; перевод в ASCII прибавлением 30
  911: 1  042A	F5 38			mov     buf_txt+8,a
  912: 1  042C	75 41 08		MOV FAZA, #8			; переводим фазу в 8
  913: 1
  914: 1				;///////////////////////
  915: 1				; проверка на 30 или 31
  916: 1				;///////////////////////

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 18



 Line  I  Addr  Code            Source

  917: 1
  918: 1  042F	E5 4A			mov	a,kod_kl      		; записываем в акум
  919: 1
  920: 1  0431	B4 00 09		CJNE A, #0, IDEL_31_7    ;///// сама проверка
  921: 1
  922: 1  0434			IDEL_30_7:
  923: 1
  924: 1  0434	E5 44			mov	a,BUF_1
  925: 1  0436	C3			CLR C
  926: 1  0437	33			RLC A
  927: 1  0438	F5 44			mov	BUF_1,A
  928: 1  043A	02 04 84		JMP END_FULL_4
  929: 1				;JMP END_alg_4
  930: 1
  931: 1  043D			IDEL_31_7:
  932: 1
  933: 1  043D	E5 44			mov	a,BUF_1
  934: 1  043F	D3			SETB C
  935: 1  0440	33			RLC A
  936: 1  0441	F5 44			mov	BUF_1,A
  937: 1  0443	02 04 84		JMP END_FULL_4
  938: 1				;JMP END_alg_4
  939: 1
  940: 1
  941: 1  0446			faza8: ;////////////////////////////////////////////////////////////////
  942: 1  0446	E5 4A			MOV A, KOD_KL
  943: 1
  944: 1				;CJNE A, #0101011b , faza_Proverka1_8	; проверка на + и уход
  945: 1				;JMP A_A                         	; уход
  946: 1			;faza_Proverka1_8:
  947: 1				;CJNE A, #0101101b , faza_Proverka2_8	; проверка на - и уход
  948: 1				;JMP A_A	                         	; уход
  949: 1			;faza_Proverka2_8:
  950: 1				;CJNE A, #0101111b , faza_Proverka3_8	; проверка на / и уход
  951: 1				;JMP A_A		                        ; уход
  952: 1			;faza_Proverka3_8:
  953: 1				;CJNE A, #0101010b , faza_Proverka4_8		; проверка на * и уход
  954: 1				;JMP A_A
  955: 1			;////////////////////////////////////////////////////////////////
  956: 1  0448			faza_Proverka4_8:
  957: 1  0448	B4 52 03		CJNE A, #1010010b , faza_Proverka5_8	; проверка на R и уход
  958: 1  044B	02 04 7F		JMP R_RESTART_R	                         ; уход
  959: 1  044E			faza_Proverka5_8:
  960: 1  044E	B4 43 08		CJNE A, #1000011b , faza_Proverka6_8	; проверка на C и уход
  961: 1  0451	75 41 00		MOV FAZA, #0
  962: 1  0454	75 44 00		MOV BUF_1, #0
  963: 1  0457	01 90			JMP main	                         ; уход
  964: 1  0459			faza_Proverka6_8:
  965: 1  0459	B4 3D 03		CJNE A, #0111101b , faza_Proverka7_8	; проверка на = и уход
  966: 1  045C	02 04 7F		JMP R_RESTART_R
  967: 1  045F			faza_Proverka7_8:
  968: 1  045F	B4 00 02		CJNE A, #0 , faza_Proverka8_8
  969: 1  0462	01 90			JMP main
  970: 1  0464			faza_Proverka8_8:
  971: 1  0464	B4 01 02		CJNE A, #1 , A_A
  972: 1  0467	01 90			JMP main

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 19



 Line  I  Addr  Code            Source

  973: 1
  974: 1
  975: 1  0469			A_A:
  976: 1  0469	75 41 09		MOV FAZA, #9 	; переводим фазу в 9
  977: 1  046C	E5 4A			mov	a,kod_kl
  978: 1  046E	F5 47			mov 	BUF_COP, A
  979: 1  0470	C2 98			CLR RI		; обнуление флага готовности приемника
  980: 1  0472	C2 AF			CLR EA		; запрет на прерывания (выключаем мини-клавиатуру)
  981: 1  0474	D2 9C			SETB ren	; установка флага разрешение приема UART
  982: 1  0476	12 09 11		call	clr_buf_txt
  983: 1  0479	12 08 95		call wiw_pc
  984: 1  047C	02 04 90		JMP END_END_4
  985: 1
  986: 1			;////////////////////////////
  987: 1  047F			R_RESTART_R:
  988: 1
  989: 1  047F	20 02 FD		JB FISP,R_RESTART_R	; рестарт программы
  990: 1  0482	01 00			JMP 0
  991: 1
  992: 1			;///////////////////////////
  993: 1  0484			END_FULL_4:
  994: 1  0484	12 08 FB		call	wiw_8
  995: 1  0487	12 09 11		call	clr_buf_txt
  996: 1  048A	02 04 90		jmp END_END_4
  997: 1
  998: 1  048D			END_alg_4:
  999: 1  048D	12 08 FB		call	wiw_8   ; вывод цифр на дисплей
 1000: 1
 1001: 1  0490			END_END_4:
 1002: 1
 1003: 1  0490	32		reti
 1004:				 	$include (alg_5.h)    ;
 1005: 1
 1006: 1			;***************************************************************************************************
       1			******************************
 1007: 1			;  alg_5 -    ;  ввод второго числа с UART
 1008: 1			;***************************************************************************************************
       1			******************************
 1009: 1
 1010: 1  0491			alg_5:
 1011: 1  0491	E5 41			MOV A ,FAZA   	   	        ; загрузка фазы в аккум
 1012: 1  0493	B4 14 03		CJNE A, #20, VV_start     	; проверка на 9 faza, если да то уходим
 1013: 1  0496	02 06 91		JMP R_RESTART_R_5		; уход на рестарт
 1014: 1
 1015: 1  0499			VV_start:
 1016: 1
 1017: 1  0499	E5 99		  	MOV A, SBUF		; загружаем символ из SBUF в KOD_PRM
 1018: 1  049B	F5 4D		  	MOV KOD_PRM, A
 1019: 1
 1020: 1  049D	B4 52 03		CJNE A, #1010010b, Prov1 ; проверка на Reset
 1021: 1  04A0	02 06 91	 	JMP R_RESTART_R_5
 1022: 1  04A3			Prov1:
 1023: 1  04A3	B4 43 08		CJNE A, #1000011b, OK_0 ; проверка на C
 1024: 1  04A6	75 41 09		MOV FAZA, #9
 1025: 1  04A9	75 45 00		MOV BUF_2, #0
 1026: 1  04AC	80 E3			JMP alg_5

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 20



 Line  I  Addr  Code            Source

 1027: 1  04AE			OK_0:
 1028: 1  04AE	12 09 42	  	call tab_asc			; вызов алгоритма 11
 1029: 1
 1030: 1
 1031: 1  04B1			faza9: ;//////////////////////////////////////////////////////////
 1032: 1
 1033: 1  04B1	E5 41			MOV A ,FAZA   	   	        ; загрузка фазы в аккум
 1034: 1  04B3	B4 09 39		CJNE A, #9, faza10   		; проверка на 9 faza, если да то уходим
 1035: 1
 1036: 1  04B6	E5 4D			MOV	A, KOD_PRM
 1037: 1
 1038: 1			;////////........................................
 1039: 1			; ПРОВЕРКА НА НЕДОПУСТИМЫЕ ЗНАЧЕНИЯ ПРИ 1 НАЖАТИИ
 1040: 1			;///////.........................................
 1041: 1
 1042: 1  04B8	B4 01 03		CJNE A, #1, OK_1   ;///// сама проверка
 1043: 1  04BB	02 04 C6		JMP OK_3
 1044: 1  04BE			OK_1:
 1045: 1  04BE	B4 00 03		CJNE A, #0, OK_2   ;///// сама проверка
 1046: 1  04C1	02 04 C6		JMP ok_3
 1047: 1  04C4			OK_2:
 1048: 1  04C4	01 98			JMP ma1
 1049: 1
 1050: 1			;///////////////////////////////////////////////
 1051: 1
 1052: 1  04C6			ok_3:
 1053: 1
 1054: 1				;//////////обнуление buf_txt
 1055: 1  04C6	12 09 11		call clr_buf_txt
 1056: 1
 1057: 1
 1058: 1
 1059: 1  04C9	75 41 0A		MOV FAZA, #10			; переводим фазу в 10
 1060: 1
 1061: 1  04CC	78 30			mov	r0,#buf_txt     ;  указатель места на начало буфера текста
 1062: 1
 1063: 1  04CE	74 0D			mov	a,#0dh
 1064: 1  04D0	F5 30			mov     buf_txt,a
 1065: 1
 1066: 1  04D2	E5 4D			mov	a,KOD_PRM       		; записываем цифру в BUF_TXT
 1067: 1
 1068: 1  04D4	24 30			add	a,#30h		; перевод в ASCII прибавлением 30
 1069: 1  04D6	F5 31			mov     buf_txt+1,a
 1070: 1
 1071: 1				;///////////////////////
 1072: 1				; проверка на 30 или 31
 1073: 1				;///////////////////////
 1074: 1
 1075: 1  04D8	E5 4D			mov	a,KOD_PRM       		; записываем в акум
 1076: 1
 1077: 1  04DA	B4 00 09		CJNE A, #0, IDEL_41_0    ;///// сама проверка
 1078: 1
 1079: 1  04DD	E5 45			mov	a,BUF_2
 1080: 1  04DF	C3			CLR C
 1081: 1  04E0	33			RLC A
 1082: 1  04E1	F5 45			mov	BUF_2,A

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 21



 Line  I  Addr  Code            Source

 1083: 1
 1084: 1  04E3	02 06 93		JMP END_alg_5
 1085: 1
 1086: 1  04E6			IDEL_41_0:
 1087: 1
 1088: 1  04E6	E5 45			mov	a,BUF_2
 1089: 1  04E8	D3			SETB C
 1090: 1  04E9	33			RLC A
 1091: 1  04EA	F5 45			mov	BUF_2,A
 1092: 1  04EC	02 06 93		JMP END_alg_5
 1093: 1
 1094: 1
 1095: 1  04EF			faza10: ;//////////////////////////////////////////////////////////
 1096: 1
 1097: 1  04EF	E5 41			MOV A ,FAZA   	   	        ; загрузка фазы в аккум
 1098: 1  04F1	B4 0A 34		CJNE A, #10, faza11   		; проверка на 9 faza, если да то уходим
 1099: 1
 1100: 1
 1101: 1  04F4	E5 4D			MOV	A, KOD_PRM       		; записываем цифру в BUF_TXT
 1102: 1
 1103: 1				;***********************************
 1104: 1				;ПРОВЕРКА НА ввод = с клавиатукры ПК
 1105: 1				;*********************************
 1106: 1
 1107: 1  04F6	B4 3D 03		CJNE A, #0111101b, OK_OK_1 ;///// сама проверка
 1108: 1  04F9	02 06 88		JMP A_A_5
 1109: 1
 1110: 1  04FC			OK_OK_1 :
 1111: 1
 1112: 1			;////////........................................
 1113: 1			; ПРОВЕРКА НА НЕДОПУСТИМЫЕ ЗНАЧЕНИЯ ПРИ  НАЖАТИИ
 1114: 1			;///////.........................................
 1115: 1  04FC	B4 01 03		CJNE A, #1, OK_1_2  ;///// сама проверка
 1116: 1  04FF	02 05 0A		JMP OK_3_2
 1117: 1  0502			OK_1_2 :
 1118: 1  0502	B4 00 03		CJNE A, #0, OK_2_2    ;///// сама проверка
 1119: 1  0505	02 05 0A		JMP ok_3_2
 1120: 1  0508			OK_2_2 :
 1121: 1  0508	01 98			JMP ma1
 1122: 1			;///////////////////////////////////////////////
 1123: 1
 1124: 1  050A			ok_3_2 :
 1125: 1
 1126: 1  050A	24 30			add	a,#30h		; перевод в ASCII прибавлением 30
 1127: 1  050C	F5 32			mov     buf_txt+2,a
 1128: 1
 1129: 1  050E	75 41 0B		MOV FAZA, #11		; переводим фазу в 10
 1130: 1				;///////////////////////
 1131: 1				; проверка на 30 или 31
 1132: 1				;///////////////////////
 1133: 1
 1134: 1  0511	E5 4D			mov	a,KOD_PRM       		; записываем в акум
 1135: 1
 1136: 1  0513	B4 00 09		CJNE A, #0, IDEL_41_01    ;///// сама проверка
 1137: 1
 1138: 1  0516	E5 45			mov	a,BUF_2

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 22



 Line  I  Addr  Code            Source

 1139: 1  0518	C3			CLR C
 1140: 1  0519	33			RLC A
 1141: 1  051A	F5 45			mov	BUF_2,A
 1142: 1
 1143: 1  051C	02 06 93		JMP END_alg_5
 1144: 1
 1145: 1  051F			IDEL_41_01:
 1146: 1
 1147: 1  051F	E5 45			mov	a,BUF_2
 1148: 1  0521	D3			SETB C
 1149: 1  0522	33			RLC A
 1150: 1  0523	F5 45			mov	BUF_2,A
 1151: 1  0525	02 06 93		JMP END_alg_5
 1152: 1
 1153: 1  0528			faza11: ;//////////////////////////////////////////////////////////
 1154: 1
 1155: 1  0528	E5 41			MOV A ,FAZA   	   	        ; загрузка фазы в аккум
 1156: 1  052A	B4 0B 34		CJNE A, #11, faza12   		; проверка на 9 faza, если да то уходим
 1157: 1
 1158: 1
 1159: 1  052D	E5 4D			MOV	A ,KOD_PRM       		; записываем цифру в BUF_TXT
 1160: 1
 1161: 1  052F	B4 3D 03		CJNE A, #0111101b, OK_0_3 ;///// сама проверка
 1162: 1  0532	02 06 88		JMP A_A_5
 1163: 1
 1164: 1			;////////........................................
 1165: 1			; ПРОВЕРКА НА НЕДОПУСТИМЫЕ ЗНАЧЕНИЯ ПРИ  НАЖАТИИ
 1166: 1			;///////.........................................
 1167: 1  0535			OK_0_3:
 1168: 1  0535	B4 01 03		CJNE A, #1, OK_1_3  ;///// сама проверка
 1169: 1  0538	02 05 43		JMP OK_3_3
 1170: 1  053B			OK_1_3:
 1171: 1  053B	B4 00 03		CJNE A, #0, OK_2_3    ;///// сама проверка
 1172: 1  053E	02 05 43		JMP ok_3_3
 1173: 1  0541			OK_2_3:
 1174: 1  0541	01 98			JMP ma1
 1175: 1			;///////////////////////////////////////////////
 1176: 1
 1177: 1  0543			ok_3_3:
 1178: 1
 1179: 1  0543	24 30			add	a,#30h		; перевод в ASCII прибавлением 30
 1180: 1  0545	F5 33			mov     buf_txt+3,a
 1181: 1  0547	75 41 0C		MOV FAZA, #12		; переводим фазу в 10
 1182: 1				;///////////////////////
 1183: 1				; проверка на 30 или 31
 1184: 1				;///////////////////////
 1185: 1
 1186: 1  054A	E5 4D			mov	a,KOD_PRM       		; записываем в акум
 1187: 1
 1188: 1  054C	B4 00 09		CJNE A, #0, IDEL_41_1    ;///// сама проверка
 1189: 1
 1190: 1  054F	E5 45			mov	a,BUF_2
 1191: 1  0551	C3			CLR C
 1192: 1  0552	33			RLC A
 1193: 1  0553	F5 45			mov	BUF_2,A
 1194: 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 23



 Line  I  Addr  Code            Source

 1195: 1  0555	02 06 93		JMP END_alg_5
 1196: 1
 1197: 1  0558			IDEL_41_1:
 1198: 1
 1199: 1  0558	E5 45			mov	a,BUF_2
 1200: 1  055A	D3			SETB C
 1201: 1  055B	33			RLC A
 1202: 1  055C	F5 45			mov	BUF_2,A
 1203: 1  055E	02 06 93		JMP END_alg_5
 1204: 1
 1205: 1  0561			faza12: ;//////////////////////////////////////////////////////////
 1206: 1
 1207: 1  0561	E5 41			MOV A ,FAZA   	   	        ; загрузка фазы в аккум
 1208: 1  0563	B4 0C 34		CJNE A, #12, faza13   		; проверка на 9 faza, если да то уходим
 1209: 1
 1210: 1
 1211: 1  0566	E5 4D			MOV	A ,KOD_PRM       		; записываем цифру в BUF_TXT
 1212: 1  0568	B4 3D 03		CJNE A, #0111101b, OK_0_4 ;///// сама проверка
 1213: 1  056B	02 06 88		JMP A_A_5
 1214: 1
 1215: 1			;////////........................................
 1216: 1			; ПРОВЕРКА НА НЕДОПУСТИМЫЕ ЗНАЧЕНИЯ ПРИ  НАЖАТИИ
 1217: 1			;///////.........................................
 1218: 1  056E			OK_0_4:
 1219: 1  056E	B4 01 03		CJNE A, #1, OK_1_4  ;///// сама проверка
 1220: 1  0571	02 05 7C		JMP OK_3_4
 1221: 1  0574			OK_1_4 :
 1222: 1  0574	B4 00 03		CJNE A, #0, OK_2_4    ;///// сама проверка
 1223: 1  0577	02 05 7C		JMP ok_3_4
 1224: 1  057A			OK_2_4:
 1225: 1  057A	01 98			JMP ma1
 1226: 1			;///////////////////////////////////////////////
 1227: 1
 1228: 1  057C			ok_3_4 :
 1229: 1
 1230: 1  057C	24 30			add	a,#30h		; перевод в ASCII прибавлением 30
 1231: 1  057E	F5 34			mov     buf_txt+4,a
 1232: 1  0580	75 41 0D		MOV FAZA, #13		; переводим фазу в 10
 1233: 1				;///////////////////////
 1234: 1				; проверка на 30 или 31
 1235: 1				;///////////////////////
 1236: 1
 1237: 1  0583	E5 4D			mov	a,KOD_PRM       		; записываем в акум
 1238: 1
 1239: 1  0585	B4 00 09		CJNE A, #0, IDEL_41_2    ;///// сама проверка
 1240: 1
 1241: 1  0588	E5 45			mov	a,BUF_2
 1242: 1  058A	C3			CLR C
 1243: 1  058B	33			RLC A
 1244: 1  058C	F5 45			mov	BUF_2,A
 1245: 1
 1246: 1  058E	02 06 93		JMP END_alg_5
 1247: 1
 1248: 1  0591			IDEL_41_2:
 1249: 1
 1250: 1  0591	E5 45			mov	a,BUF_2

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 24



 Line  I  Addr  Code            Source

 1251: 1  0593	D3			SETB C
 1252: 1  0594	33			RLC A
 1253: 1  0595	F5 45			mov	BUF_2,A
 1254: 1  0597	02 06 93		JMP END_alg_5
 1255: 1
 1256: 1  059A			faza13: ;//////////////////////////////////////////////////////////
 1257: 1
 1258: 1  059A	E5 41			MOV A ,FAZA   	   	        ; загрузка фазы в аккум
 1259: 1  059C	B4 0D 34		CJNE A, #13, faza14  		; проверка на 9 faza, если да то уходим
 1260: 1
 1261: 1
 1262: 1  059F	E5 4D			MOV	A ,KOD_PRM       		; записываем цифру в BUF_TXT
 1263: 1  05A1	B4 3D 03		CJNE A, #0111101b, OK_0_5 ;///// сама проверка
 1264: 1  05A4	02 06 88		JMP A_A_5
 1265: 1
 1266: 1			;////////........................................
 1267: 1			; ПРОВЕРКА НА НЕДОПУСТИМЫЕ ЗНАЧЕНИЯ ПРИ  НАЖАТИИ
 1268: 1			;///////.........................................
 1269: 1  05A7			OK_0_5:
 1270: 1  05A7	B4 01 03		CJNE A, #1, OK_1_5  ;///// сама проверка
 1271: 1  05AA	02 05 B5		JMP OK_3_5
 1272: 1  05AD			OK_1_5 :
 1273: 1  05AD	B4 00 03		CJNE A, #0, OK_2_5    ;///// сама проверка
 1274: 1  05B0	02 05 B5		JMP ok_3_5
 1275: 1  05B3			OK_2_5:
 1276: 1  05B3	01 98			JMP ma1
 1277: 1			;///////////////////////////////////////////////
 1278: 1
 1279: 1  05B5			ok_3_5 :
 1280: 1
 1281: 1  05B5	24 30			add	a,#30h		; перевод в ASCII прибавлением 30
 1282: 1  05B7	F5 35			mov     buf_txt+5,a
 1283: 1  05B9	75 41 0E		MOV FAZA, #14		; переводим фазу в 10
 1284: 1				;///////////////////////
 1285: 1				; проверка на 30 или 31
 1286: 1				;///////////////////////
 1287: 1
 1288: 1  05BC	E5 4D			mov	a,KOD_PRM       		; записываем в акум
 1289: 1
 1290: 1  05BE	B4 00 09		CJNE A, #0, IDEL_41_3    ;///// сама проверка
 1291: 1
 1292: 1  05C1	E5 45			mov	a,BUF_2
 1293: 1  05C3	C3			CLR C
 1294: 1  05C4	33			RLC A
 1295: 1  05C5	F5 45			mov	BUF_2,A
 1296: 1
 1297: 1  05C7	02 06 93		JMP END_alg_5
 1298: 1
 1299: 1  05CA			IDEL_41_3:
 1300: 1
 1301: 1  05CA	E5 45			mov	a,BUF_2
 1302: 1  05CC	D3			SETB C
 1303: 1  05CD	33			RLC A
 1304: 1  05CE	F5 45			mov	BUF_2,A
 1305: 1  05D0	02 06 93		JMP END_alg_5
 1306: 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 25



 Line  I  Addr  Code            Source

 1307: 1  05D3			faza14: ;//////////////////////////////////////////////////////////
 1308: 1
 1309: 1  05D3	E5 41			MOV A ,FAZA   	   	        ; загрузка фазы в аккум
 1310: 1  05D5	B4 0E 34		CJNE A, #14, faza15  		; проверка на 9 faza, если да то уходим
 1311: 1
 1312: 1
 1313: 1  05D8	E5 4D			MOV	A ,KOD_PRM       		; записываем цифру в BUF_TXT
 1314: 1  05DA	B4 3D 03		CJNE A, #0111101b, OK_0_6 ;///// сама проверка
 1315: 1  05DD	02 06 88		JMP A_A_5
 1316: 1
 1317: 1			;////////........................................
 1318: 1			; ПРОВЕРКА НА НЕДОПУСТИМЫЕ ЗНАЧЕНИЯ ПРИ  НАЖАТИИ
 1319: 1			;///////.........................................
 1320: 1  05E0			OK_0_6:
 1321: 1  05E0	B4 01 03		CJNE A, #1, OK_1_6  ;///// сама проверка
 1322: 1  05E3	02 05 EE		JMP OK_3_6
 1323: 1  05E6			OK_1_6:
 1324: 1  05E6	B4 00 03		CJNE A, #0, OK_2_6    ;///// сама проверка
 1325: 1  05E9	02 05 EE		JMP ok_3_6
 1326: 1  05EC			OK_2_6:
 1327: 1  05EC	01 98			JMP ma1
 1328: 1			;///////////////////////////////////////////////
 1329: 1
 1330: 1  05EE			ok_3_6 :
 1331: 1
 1332: 1  05EE	24 30			add	a,#30h		; перевод в ASCII прибавлением 30
 1333: 1  05F0	F5 36			mov     buf_txt+6,a
 1334: 1  05F2	75 41 0F		MOV FAZA, #15		; переводим фазу в 10
 1335: 1				;///////////////////////
 1336: 1				; проверка на 30 или 31
 1337: 1				;///////////////////////
 1338: 1
 1339: 1  05F5	E5 4D			mov	a,KOD_PRM       		; записываем в акум
 1340: 1
 1341: 1  05F7	B4 00 09		CJNE A, #0, IDEL_41_4    ;///// сама проверка
 1342: 1
 1343: 1  05FA	E5 45			mov	a,BUF_2
 1344: 1  05FC	C3			CLR C
 1345: 1  05FD	33			RLC A
 1346: 1  05FE	F5 45			mov	BUF_2,A
 1347: 1
 1348: 1  0600	02 06 93		JMP END_alg_5
 1349: 1
 1350: 1  0603			IDEL_41_4:
 1351: 1
 1352: 1  0603	E5 45			mov	a,BUF_2
 1353: 1  0605	D3			SETB C
 1354: 1  0606	33			RLC A
 1355: 1  0607	F5 45			mov	BUF_2,A
 1356: 1  0609	02 06 93		JMP END_alg_5
 1357: 1
 1358: 1  060C			faza15: ;//////////////////////////////////////////////////////////
 1359: 1
 1360: 1  060C	E5 41			MOV A ,FAZA   	   	        ; загрузка фазы в аккум
 1361: 1  060E	B4 0F 34		CJNE A, #15, faza16  		; проверка на 9 faza, если да то уходим
 1362: 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 26



 Line  I  Addr  Code            Source

 1363: 1
 1364: 1  0611	E5 4D			MOV	A ,KOD_PRM       		; записываем цифру в BUF_TXT
 1365: 1  0613	B4 3D 03		CJNE A, #0111101b, OK_0_7 ;///// сама проверка
 1366: 1  0616	02 06 88		JMP A_A_5
 1367: 1
 1368: 1			;////////........................................
 1369: 1			; ПРОВЕРКА НА НЕДОПУСТИМЫЕ ЗНАЧЕНИЯ ПРИ  НАЖАТИИ
 1370: 1			;///////.........................................
 1371: 1  0619			OK_0_7:
 1372: 1  0619	B4 01 03		CJNE A, #1, OK_1_7  ;///// сама проверка
 1373: 1  061C	02 06 27		JMP OK_3_7
 1374: 1  061F			OK_1_7 :
 1375: 1  061F	B4 00 03		CJNE A, #0, OK_2_7    ;///// сама проверка
 1376: 1  0622	02 06 27		JMP ok_3_7
 1377: 1  0625			OK_2_7:
 1378: 1  0625	01 98			JMP ma1
 1379: 1			;///////////////////////////////////////////////
 1380: 1
 1381: 1  0627			ok_3_7 :
 1382: 1
 1383: 1  0627	24 30			add	a,#30h		; перевод в ASCII прибавлением 30
 1384: 1  0629	F5 37			mov     buf_txt+7,a
 1385: 1  062B	75 41 10		MOV FAZA, #16		; переводим фазу в 10
 1386: 1				;///////////////////////
 1387: 1				; проверка на 30 или 31
 1388: 1				;///////////////////////
 1389: 1
 1390: 1  062E	E5 4D			mov	a,KOD_PRM       		; записываем в акум
 1391: 1
 1392: 1  0630	B4 00 09		CJNE A, #0, IDEL_41_5    ;///// сама проверка
 1393: 1
 1394: 1  0633	E5 45			mov	a,BUF_2
 1395: 1  0635	C3			CLR C
 1396: 1  0636	33			RLC A
 1397: 1  0637	F5 45			mov	BUF_2,A
 1398: 1
 1399: 1  0639	02 06 93		JMP END_alg_5
 1400: 1
 1401: 1  063C			IDEL_41_5:
 1402: 1
 1403: 1  063C	E5 45			mov	a,BUF_2
 1404: 1  063E	D3			SETB C
 1405: 1  063F	33			RLC A
 1406: 1  0640	F5 45			mov	BUF_2,A
 1407: 1  0642	02 06 93		JMP END_alg_5
 1408: 1
 1409: 1  0645			faza16: ;//////////////////////////////////////////////////////////
 1410: 1
 1411: 1  0645	E5 41			MOV A ,FAZA   	   	        ; загрузка фазы в аккум
 1412: 1  0647	B4 10 31		CJNE A, #16, faza17   		; проверка на 9 faza, если да то уходим
 1413: 1
 1414: 1
 1415: 1  064A	E5 4D			MOV	A ,KOD_PRM       		; записываем цифру в BUF_TXT
 1416: 1  064C	B4 3D 03		CJNE A, #0111101b, OK_0_8 ;///// сама проверка
 1417: 1  064F	02 06 88		JMP A_A_5
 1418: 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 27



 Line  I  Addr  Code            Source

 1419: 1			;////////........................................
 1420: 1			; ПРОВЕРКА НА НЕДОПУСТИМЫЕ ЗНАЧЕНИЯ ПРИ  НАЖАТИИ
 1421: 1			;///////.........................................
 1422: 1  0652			OK_0_8:
 1423: 1  0652	B4 01 03		CJNE A, #1, OK_1_8  ;///// сама проверка
 1424: 1  0655	02 06 60		JMP OK_3_8
 1425: 1  0658			OK_1_8:
 1426: 1  0658	B4 00 03		CJNE A, #0, OK_2_8    ;///// сама проверка
 1427: 1  065B	02 06 60		JMP ok_3_8
 1428: 1  065E			OK_2_8:
 1429: 1  065E	01 98			JMP ma1
 1430: 1			;///////////////////////////////////////////////
 1431: 1
 1432: 1  0660			ok_3_8 :
 1433: 1
 1434: 1  0660	24 30			add	a,#30h		; перевод в ASCII прибавлением 30
 1435: 1  0662	F5 38			mov     buf_txt+8,a
 1436: 1
 1437: 1
 1438: 1				;MOV FAZA, #17		; переводим фазу в 10
 1439: 1
 1440: 1				;///////////////////////
 1441: 1				; проверка на 30 или 31
 1442: 1				;///////////////////////
 1443: 1
 1444: 1  0664	E5 4D			mov	a,KOD_PRM       		; записываем в акум
 1445: 1
 1446: 1  0666	B4 00 09		CJNE A, #0, IDEL_41_6    ;///// сама проверка
 1447: 1
 1448: 1  0669	E5 45			mov	a,BUF_2
 1449: 1  066B	C3			CLR C
 1450: 1  066C	33			RLC A
 1451: 1  066D	F5 45			mov	BUF_2,A
 1452: 1
 1453: 1  066F	02 06 93		JMP END_alg_5
 1454: 1
 1455: 1  0672			IDEL_41_6:
 1456: 1
 1457: 1  0672	E5 45			mov	a,BUF_2
 1458: 1  0674	D3			SETB C
 1459: 1  0675	33			RLC A
 1460: 1  0676	F5 45			mov	BUF_2,A
 1461: 1  0678	02 06 93		JMP END_alg_5
 1462: 1
 1463: 1  067B			faza17:
 1464: 1  067B	E5 41			MOV A ,FAZA   	   	        ; загрузка фазы в аккум
 1465: 1  067D	B4 11 08		CJNE A, #17, A_A_5   		; проверка на 9 faza, если да то уходим
 1466: 1  0680	E5 4D			MOV	A ,KOD_PRM
 1467: 1  0682	B4 52 0C		CJNE A, #1010010b, R_RESTART_R_5
 1468: 1  0685	02 06 91		JMP R_RESTART_R_5
 1469: 1
 1470: 1				 ;//////////////////////////////////////////////////////////
 1471: 1
 1472: 1
 1473: 1  0688			A_A_5:
 1474: 1				;/////////////////////

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 28



 Line  I  Addr  Code            Source

 1475: 1				;********************
 1476: 1				; МАЕМАТИКА НАЧИНАЕТСЯ ЗДЕСЬ
 1477: 1				;********************
 1478: 1				;////////////////////
 1479: 1
 1480: 1  0688	12 06 97		call alg_6_1		; вызываем проверку чисел
 1481: 1  068B	75 41 11		MOV FAZA, #17		; переводим фазу в 19
 1482: 1  068E	02 06 96		JMP END_END_5
 1483: 1			;////////////////////////////
 1484: 1  0691			R_RESTART_R_5:
 1485: 1						; рестарт программы
 1486: 1  0691	01 00			JMP 0
 1487: 1			;////////////////////////////
 1488: 1
 1489: 1
 1490: 1  0693			END_alg_5:
 1491: 1
 1492: 1  0693	12 08 FB		call	wiw_8    ; вывод цифр
 1493: 1
 1494: 1  0696			END_END_5:
 1495: 1  0696	22			ret
 1496:				 	$include (alg_6_1.h)    ;
 1497: 1
 1498: 1
 1499: 1			;***************************************************************************************************
       1			******************************
 1500: 1			;  alg_6_1 - Математика
 1501: 1			;***************************************************************************************************
       1			******************************
 1502: 1
 1503: 1  0697			alg_6_1:
 1504: 1
 1505: 1  0697	75 4E 00		mov	buf_result_l,#0
 1506: 1  069A	75 4F 00		mov	buf_result_h,#0
 1507: 1				;//////////обнуление buf_txt
 1508: 1  069D	12 09 11		call	clr_buf_txt
 1509: 1
 1510: 1
 1511: 1			;**********************************************************************************
 1512: 1			; БОЛЬШАЯ ПРОВЕРКА НА КОД ОПЕРАЦИИ + - / *
 1513: 1			;**********************************************************************************
 1514: 1
 1515: 1
 1516: 1			;***************************
 1517: 1			;ПРОВЕРКА НА КОД ОПЕРАЦИИ +
 1518: 1			;***************************
 1519: 1
 1520: 1  06A0	E5 47			MOV A, BUF_COP
 1521: 1
 1522: 1  06A2	B4 2B 03		CJNE A, #0101011b , NEXT_MINUS ;/// ПРОВЕРКА НА +
 1523: 1  06A5	02 06 BD		JMP GOTO_PLUS
 1524: 1
 1525: 1			;***************************
 1526: 1			;ПРОВЕРКА НА КОД ОПЕРАЦИИ -
 1527: 1			;***************************
 1528: 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 29



 Line  I  Addr  Code            Source

 1529: 1  06A8			NEXT_MINUS:
 1530: 1
 1531: 1  06A8	B4 2D 03		CJNE A, #0101101b ,  NEXT_multiplication ;/// ПРОВЕРКА НА -
 1532: 1  06AB	02 08 2D		JMP GOTO_MINUS
 1533: 1
 1534: 1			;***************************
 1535: 1			;ПРОВЕРКА НА КОД ОПЕРАЦИИ *
 1536: 1			;***************************
 1537: 1
 1538: 1  06AE			NEXT_multiplication:
 1539: 1
 1540: 1  06AE	B4 2A 03		CJNE A, #0101010b ,NEXT_DELETE  ;/// ПРОВЕРКА НА *
 1541: 1  06B1	02 08 42		JMP GOTO_multiplication
 1542: 1
 1543: 1			;***************************
 1544: 1			;ПРОВЕРКА НА КОД ОПЕРАЦИИ /
 1545: 1			;***************************
 1546: 1  06B4			NEXT_DELETE:
 1547: 1  06B4	B4 2F 03		CJNE A, #0101111b , END_alg_6_1_METKA ;/// ПРОВЕРКА НА /
 1548: 1  06B7	02 08 50		JMP GOTO_DELETE
 1549: 1
 1550: 1  06BA			END_alg_6_1_METKA:
 1551: 1  06BA	02 08 69		JMP END_alg_6_1
 1552: 1
 1553: 1
 1554: 1
 1555: 1
 1556: 1			;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1557: 1			;+ + + + + + +
 1558: 1			;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1559: 1
 1560: 1  06BD			GOTO_PLUS:
 1561: 1
 1562: 1  06BD	E5 44			MOV A, BUF_1
 1563: 1  06BF	25 45			ADD A, BUF_2
 1564: 1
 1565: 1  06C1	F5 4E			MOV BUF_RESULT_L, A
 1566: 1
 1567: 1  06C3	50 02			JNC	OUTPUT_1
 1568: 1  06C5	05 4F			inc     BUF_RESULT_H
 1569: 1
 1570: 1  06C7			OUTPUT_1:
 1571: 1				;****************
 1572: 1				; вывод на экран
 1573: 1				;****************
 1574: 1
 1575: 1  06C7	78 30			mov	r0,#buf_txt     ;  указатель места на начало буфера текста
 1576: 1
 1577: 1  06C9	74 0D			mov	a,#0dh
 1578: 1  06CB	F5 30			mov     buf_txt,a
 1579: 1
 1580: 1  06CD	E5 4F			mov	a,BUF_RESULT_H
 1581: 1  06CF	33			RLC A
 1582: 1  06D0	F5 4F			mov	BUF_RESULT_H,A
 1583: 1
 1584: 1			;//////////////////////////////////////////////////////

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 30



 Line  I  Addr  Code            Source

 1585: 1			;ПРОВЕРКА НА f_neg И ВЫСТАВЛЕНИЕ ОТРИЦАТЕЛЬОГО ЗНАКА
 1586: 1			;/////////////////////////////////////////////////////
 1587: 1  06D2	20 05 10		JB     f_neg, FLAG_MINUS
 1588: 1
 1589: 1  06D5	50 07			JNC     ZERO_CAME
 1590: 1  06D7	74 31			MOV	a,#31h		; перевод в ASCII прибавлением 31
 1591: 1  06D9	F5 31			mov     buf_txt+1,a
 1592: 1
 1593: 1  06DB	02 06 EC		JMP PLUS_FAZ_2
 1594: 1
 1595: 1  06DE			ZERO_CAME:
 1596: 1
 1597: 1  06DE	74 30			MOV	a,#30h		; перевод в ASCII прибавлением 30
 1598: 1  06E0	F5 31			mov     buf_txt+1,a
 1599: 1
 1600: 1  06E2	02 06 EC		JMP PLUS_FAZ_2
 1601: 1
 1602: 1  06E5			FLAG_MINUS:
 1603: 1
 1604: 1  06E5	74 2D			MOV	a,#'-'		; перевод в ASCII прибавлением 31
 1605: 1  06E7	F5 31			mov     buf_txt+1,a
 1606: 1  06E9	02 06 EC		JMP PLUS_FAZ_2
 1607: 1
 1608: 1  06EC			PLUS_FAZ_2:
 1609: 1
 1610: 1  06EC	E5 4F			mov	a,BUF_RESULT_H
 1611: 1
 1612: 1  06EE	33			RLC A
 1613: 1  06EF	F5 4F			mov	BUF_RESULT_H,A
 1614: 1
 1615: 1  06F1	50 07			JNC     ZERO_CAME_2
 1616: 1  06F3	74 31			mov	a,#31h		; перевод в ASCII прибавлением 30
 1617: 1  06F5	F5 32			mov     buf_txt+2,a
 1618: 1
 1619: 1  06F7	02 07 01		JMP PLUS_FAZ_3
 1620: 1
 1621: 1  06FA			ZERO_CAME_2:
 1622: 1
 1623: 1  06FA	74 30			mov	a,#30h		; перевод в ASCII прибавлением 30
 1624: 1  06FC	F5 32			mov     buf_txt+2,a
 1625: 1
 1626: 1  06FE	02 07 01		JMP PLUS_FAZ_3
 1627: 1
 1628: 1  0701			PLUS_FAZ_3:
 1629: 1  0701	E5 4F			mov	a,BUF_RESULT_H
 1630: 1
 1631: 1  0703	33			RLC A
 1632: 1  0704	F5 4F			mov	BUF_RESULT_H,A
 1633: 1
 1634: 1  0706	50 07			JNC     ZERO_CAME_3
 1635: 1  0708	74 31			mov	a,#31h		; перевод в ASCII прибавлением 30
 1636: 1  070A	F5 33			mov     buf_txt+3,a
 1637: 1
 1638: 1  070C	02 07 16		JMP PLUS_FAZ_4
 1639: 1
 1640: 1  070F			ZERO_CAME_3:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 31



 Line  I  Addr  Code            Source

 1641: 1
 1642: 1  070F	74 30			mov	a,#30h		; перевод в ASCII прибавлением 30
 1643: 1  0711	F5 33			mov     buf_txt+3,a
 1644: 1
 1645: 1  0713	02 07 16		JMP PLUS_FAZ_4
 1646: 1
 1647: 1  0716			PLUS_FAZ_4:
 1648: 1
 1649: 1  0716	E5 4F			mov	a,BUF_RESULT_H
 1650: 1  0718	33			RLC A
 1651: 1  0719	F5 4F			mov	BUF_RESULT_H,A
 1652: 1
 1653: 1  071B	50 07			JNC     ZERO_CAME_4
 1654: 1  071D	74 31			mov	a,#31h		; перевод в ASCII прибавлением 30
 1655: 1  071F	F5 34			mov     buf_txt+4,a
 1656: 1
 1657: 1  0721	02 07 2B		JMP PLUS_FAZ_5
 1658: 1
 1659: 1  0724			ZERO_CAME_4:
 1660: 1
 1661: 1  0724	74 30			mov	a,#30h		; перевод в ASCII прибавлением 30
 1662: 1  0726	F5 34			mov     buf_txt+4,a
 1663: 1
 1664: 1  0728	02 07 2B		JMP PLUS_FAZ_5
 1665: 1
 1666: 1  072B			PLUS_FAZ_5:
 1667: 1
 1668: 1  072B	E5 4F			mov	a,BUF_RESULT_H
 1669: 1  072D	33			RLC A
 1670: 1  072E	F5 4F			mov	BUF_RESULT_H,A
 1671: 1
 1672: 1  0730	50 07			JNC     ZERO_CAME_5
 1673: 1  0732	74 31			mov	a,#31h		; перевод в ASCII прибавлением 30
 1674: 1  0734	F5 35			mov     buf_txt+5,a
 1675: 1
 1676: 1  0736	02 07 40		JMP PLUS_FAZ_6
 1677: 1
 1678: 1  0739			ZERO_CAME_5:
 1679: 1
 1680: 1  0739	74 30			mov	a,#30h		; перевод в ASCII прибавлением 30
 1681: 1  073B	F5 35			mov     buf_txt+5,a
 1682: 1
 1683: 1  073D	02 07 40		JMP PLUS_FAZ_6
 1684: 1
 1685: 1  0740			PLUS_FAZ_6:
 1686: 1
 1687: 1  0740	E5 4F			mov	a,BUF_RESULT_H
 1688: 1  0742	33			RLC A
 1689: 1  0743	F5 4F			mov	BUF_RESULT_H,A
 1690: 1
 1691: 1  0745	50 07			JNC     ZERO_CAME_6
 1692: 1  0747	74 31			mov	a,#31h		; перевод в ASCII прибавлением 30
 1693: 1  0749	F5 36			mov     buf_txt+6,a
 1694: 1
 1695: 1  074B	02 07 55		JMP PLUS_FAZ_7
 1696: 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 32



 Line  I  Addr  Code            Source

 1697: 1  074E			ZERO_CAME_6:
 1698: 1
 1699: 1  074E	74 30			mov	a,#30h		; перевод в ASCII прибавлением 30
 1700: 1  0750	F5 36			mov     buf_txt+6,a
 1701: 1
 1702: 1  0752	02 07 55		JMP PLUS_FAZ_7
 1703: 1
 1704: 1  0755			PLUS_FAZ_7:
 1705: 1
 1706: 1  0755	E5 4F			mov	a,BUF_RESULT_H
 1707: 1  0757	33			RLC A
 1708: 1  0758	F5 4F			mov	BUF_RESULT_H,A
 1709: 1
 1710: 1  075A	50 07			JNC     ZERO_CAME_7
 1711: 1  075C	74 31			mov	a,#31h		; перевод в ASCII прибавлением 30
 1712: 1  075E	F5 37			mov     buf_txt+7,a
 1713: 1
 1714: 1  0760	02 07 6A		JMP PLUS_FAZ_8
 1715: 1
 1716: 1  0763			ZERO_CAME_7:
 1717: 1
 1718: 1  0763	74 30			mov	a,#30h		; перевод в ASCII прибавлением 30
 1719: 1  0765	F5 37			mov     buf_txt+7,a
 1720: 1
 1721: 1  0767	02 07 6A		JMP PLUS_FAZ_8
 1722: 1
 1723: 1  076A			PLUS_FAZ_8:
 1724: 1
 1725: 1  076A	E5 4F			mov	a,BUF_RESULT_H
 1726: 1  076C	33			RLC A
 1727: 1  076D	F5 4F			mov	BUF_RESULT_H,A
 1728: 1
 1729: 1  076F	50 07			JNC     ZERO_CAME_8
 1730: 1  0771	74 31			mov	a,#31h		; перевод в ASCII прибавлением 30
 1731: 1  0773	F5 38			mov     buf_txt+8,a
 1732: 1
 1733: 1  0775	02 07 7F		JMP PLUS_FAZ_9
 1734: 1
 1735: 1  0778			ZERO_CAME_8:
 1736: 1
 1737: 1  0778	74 30			mov	a,#30h		; перевод в ASCII прибавлением 30
 1738: 1  077A	F5 38			mov     buf_txt+8,a
 1739: 1
 1740: 1  077C	02 07 7F		JMP PLUS_FAZ_9
 1741: 1
 1742: 1  077F			PLUS_FAZ_9:
 1743: 1
 1744: 1  077F	E5 4E			mov	a,BUF_RESULT_L
 1745: 1  0781	33			RLC A
 1746: 1  0782	F5 4E			mov	BUF_RESULT_L,A
 1747: 1
 1748: 1  0784	50 07			JNC     ZERO_CAME_9
 1749: 1  0786	74 31			mov	a,#31h		; перевод в ASCII прибавлением 30
 1750: 1  0788	F5 39			mov     buf_txt+9,a
 1751: 1
 1752: 1  078A	02 07 94		JMP PLUS_FAZ_10

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 33



 Line  I  Addr  Code            Source

 1753: 1
 1754: 1  078D			ZERO_CAME_9:
 1755: 1
 1756: 1  078D	74 30			mov	a,#30h		; перевод в ASCII прибавлением 30
 1757: 1  078F	F5 39			mov     buf_txt+9,a
 1758: 1
 1759: 1  0791	02 07 94		JMP PLUS_FAZ_10
 1760: 1
 1761: 1  0794			PLUS_FAZ_10:
 1762: 1
 1763: 1  0794	E5 4E			mov	a,BUF_RESULT_L
 1764: 1  0796	33			RLC A
 1765: 1  0797	F5 4E			mov	BUF_RESULT_L,A
 1766: 1
 1767: 1  0799	50 07			JNC     ZERO_CAME_10
 1768: 1  079B	74 31			mov	a,#31h		; перевод в ASCII прибавлением 30
 1769: 1  079D	F5 3A			mov     buf_txt+10,a
 1770: 1
 1771: 1  079F	02 07 A9		JMP PLUS_FAZ_11
 1772: 1
 1773: 1  07A2			ZERO_CAME_10:
 1774: 1
 1775: 1  07A2	74 30			mov	a,#30h		; перевод в ASCII прибавлением 30
 1776: 1  07A4	F5 3A			mov     buf_txt+10,a
 1777: 1
 1778: 1  07A6	02 07 A9		JMP PLUS_FAZ_11
 1779: 1
 1780: 1  07A9			PLUS_FAZ_11:
 1781: 1
 1782: 1  07A9	E5 4E			mov	a,BUF_RESULT_L
 1783: 1  07AB	33			RLC A
 1784: 1  07AC	F5 4E			mov	BUF_RESULT_L,A
 1785: 1
 1786: 1  07AE	50 07			JNC     ZERO_CAME_11
 1787: 1  07B0	74 31			mov	a,#31h		; перевод в ASCII прибавлением 30
 1788: 1  07B2	F5 3B			mov     buf_txt+11,a
 1789: 1
 1790: 1  07B4	02 07 BE		JMP PLUS_FAZ_12
 1791: 1
 1792: 1  07B7			ZERO_CAME_11:
 1793: 1
 1794: 1  07B7	74 30			mov	a,#30h		; перевод в ASCII прибавлением 30
 1795: 1  07B9	F5 3B			mov     buf_txt+11,a
 1796: 1
 1797: 1  07BB	02 07 BE		JMP PLUS_FAZ_12
 1798: 1
 1799: 1  07BE			PLUS_FAZ_12:
 1800: 1
 1801: 1  07BE	E5 4E			mov	a,BUF_RESULT_L
 1802: 1  07C0	33			RLC A
 1803: 1  07C1	F5 4E			mov	BUF_RESULT_L,A
 1804: 1
 1805: 1  07C3	50 07			JNC     ZERO_CAME_12
 1806: 1  07C5	74 31			mov	a,#31h		; перевод в ASCII прибавлением 30
 1807: 1  07C7	F5 3C			mov     buf_txt+12,a
 1808: 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 34



 Line  I  Addr  Code            Source

 1809: 1  07C9	02 07 D3		JMP PLUS_FAZ_13
 1810: 1
 1811: 1  07CC			ZERO_CAME_12:
 1812: 1
 1813: 1  07CC	74 30			mov	a,#30h		; перевод в ASCII прибавлением 30
 1814: 1  07CE	F5 3C			mov     buf_txt+12,a
 1815: 1
 1816: 1  07D0	02 07 D3		JMP PLUS_FAZ_13
 1817: 1
 1818: 1  07D3			PLUS_FAZ_13:
 1819: 1
 1820: 1  07D3	E5 4E			mov	a,BUF_RESULT_L
 1821: 1  07D5	33			RLC A
 1822: 1  07D6	F5 4E			mov	BUF_RESULT_L,A
 1823: 1
 1824: 1  07D8	50 07			JNC     ZERO_CAME_13
 1825: 1  07DA	74 31			mov	a,#31h		; перевод в ASCII прибавлением 30
 1826: 1  07DC	F5 3D			mov     buf_txt+13,a
 1827: 1
 1828: 1  07DE	02 07 E8		JMP PLUS_FAZ_14
 1829: 1
 1830: 1  07E1			ZERO_CAME_13:
 1831: 1
 1832: 1  07E1	74 30			mov	a,#30h		; перевод в ASCII прибавлением 30
 1833: 1  07E3	F5 3D			mov     buf_txt+13,a
 1834: 1
 1835: 1  07E5	02 07 E8		JMP PLUS_FAZ_14
 1836: 1
 1837: 1  07E8			PLUS_FAZ_14:
 1838: 1
 1839: 1  07E8	E5 4E			mov	a,BUF_RESULT_L
 1840: 1  07EA	33			RLC A
 1841: 1  07EB	F5 4E			mov	BUF_RESULT_L,A
 1842: 1
 1843: 1  07ED	50 07			JNC     ZERO_CAME_14
 1844: 1  07EF	74 31			mov	a,#31h		; перевод в ASCII прибавлением 30
 1845: 1  07F1	F5 3E			mov     buf_txt+14,a
 1846: 1
 1847: 1  07F3	02 07 FD		JMP PLUS_FAZ_15
 1848: 1
 1849: 1  07F6			ZERO_CAME_14:
 1850: 1
 1851: 1  07F6	74 30			mov	a,#30h		; перевод в ASCII прибавлением 30
 1852: 1  07F8	F5 3E			mov     buf_txt+14,a
 1853: 1
 1854: 1  07FA	02 07 FD		JMP PLUS_FAZ_15
 1855: 1
 1856: 1  07FD			PLUS_FAZ_15:
 1857: 1
 1858: 1  07FD	E5 4E			mov	a,BUF_RESULT_L
 1859: 1  07FF	33			RLC A
 1860: 1  0800	F5 4E			mov	BUF_RESULT_L,A
 1861: 1
 1862: 1  0802	50 07			JNC     ZERO_CAME_15
 1863: 1  0804	74 31			mov	a,#31h		; перевод в ASCII прибавлением 30
 1864: 1  0806	F5 3F			mov     buf_txt+15,a

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 35



 Line  I  Addr  Code            Source

 1865: 1
 1866: 1  0808	02 08 12		JMP PLUS_FAZ_16
 1867: 1
 1868: 1  080B			ZERO_CAME_15:
 1869: 1
 1870: 1  080B	74 30			mov	a,#30h		; перевод в ASCII прибавлением 30
 1871: 1  080D	F5 3F			mov     buf_txt+15,a
 1872: 1
 1873: 1  080F	02 08 12		JMP PLUS_FAZ_16
 1874: 1
 1875: 1  0812			PLUS_FAZ_16:
 1876: 1
 1877: 1  0812	E5 4E			mov	a,BUF_RESULT_L
 1878: 1  0814	33			RLC A
 1879: 1  0815	F5 4E			mov	BUF_RESULT_L,A
 1880: 1
 1881: 1  0817	50 07			JNC     ZERO_CAME_16
 1882: 1  0819	74 31			mov	a,#31h		; перевод в ASCII прибавлением 30
 1883: 1  081B	F5 40			mov     buf_txt+16,a
 1884: 1
 1885: 1  081D	02 08 27		JMP PLUS_FAZ_17
 1886: 1
 1887: 1  0820			ZERO_CAME_16:
 1888: 1
 1889: 1  0820	74 30			mov	a,#30h		; перевод в ASCII прибавлением 30
 1890: 1  0822	F5 40			mov     buf_txt+16,a
 1891: 1
 1892: 1  0824	02 08 27		JMP PLUS_FAZ_17
 1893: 1
 1894: 1  0827			PLUS_FAZ_17:
 1895: 1
 1896: 1  0827	12 08 FB		call wiw_8
 1897: 1  082A	02 08 69		JMP END_alg_6_1
 1898: 1
 1899: 1			;----------------------------------------------------------------
 1900: 1			;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 1901: 1			;----------------------------------------------------------------
 1902: 1  082D			GOTO_MINUS:
 1903: 1
 1904: 1  082D	E5 44			MOV A, BUF_1	 ; кладем в A первое числа
 1905: 1  082F	C3			CLR	C	 ; сброс бита с!!!
 1906: 1  0830	95 45			SUBB A, BUF_2    ; вычитаем  второе число
 1907: 1
 1908: 1  0832	F5 4E			mov	BUF_RESULT_L,a    ; результат в младший байт результата
 1909: 1  0834	50 09			jnc	OUTPUT_1_MINUS	           ; если есть перенос - число отрицательное
 1910: 1  0836	F4			cpl	a                 ;  инверсия и + 1
 1911: 1  0837	04			inc	a
 1912: 1  0838	F5 4E			mov	BUF_RESULT_L,a    ; результат в младший байт результата
 1913: 1
 1914: 1  083A	D2 05			setb	f_neg            ; установить флаг отрицательного результата
 1915: 1
 1916: 1  083C	02 06 C7		jmp	OUTPUT_1
 1917: 1
 1918: 1  083F			OUTPUT_1_MINUS:
 1919: 1
 1920: 1  083F	02 06 C7		JMP OUTPUT_1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 36



 Line  I  Addr  Code            Source

 1921: 1
 1922: 1
 1923: 1			;**************************************************************************
 1924: 1			;* * * * * * * * * * * * * * * * * * * * * * * * *
 1925: 1			;**************************************************************************
 1926: 1  0842			GOTO_multiplication:
 1927: 1
 1928: 1  0842	E5 44			mov	a,buf_1
 1929: 1  0844	85 45 F0		mov	b,buf_2
 1930: 1
 1931: 1  0847	A4			mul	ab
 1932: 1
 1933: 1  0848	F5 4E			mov	buf_result_l,a    ;
 1934: 1  084A	85 F0 4F		mov	buf_result_h,b    ;
 1935: 1
 1936: 1  084D	02 06 C7		jmp	OUTPUT_1
 1937: 1
 1938: 1			;/////////////////////////////////////////////////////////////////////////////
 1939: 1			; / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / /
 1940: 1			;/////////////////////////////////////////////////////////////////////////////
 1941: 1  0850			GOTO_DELETE:
 1942: 1  0850	E5 45			mov a, buf_2
 1943: 1  0852	B4 00 09		CJNE a, #0, cont_div
 1944: 1  0855	12 09 11		call clr_buf_txt
 1945: 1  0858	12 08 B1		call wiw_err
 1946: 1  085B	02 00 00		JMP 0
 1947: 1
 1948: 1  085E			cont_div:
 1949: 1
 1950: 1  085E	E5 44			mov	a,buf_1
 1951: 1  0860	85 45 F0		mov	b,buf_2
 1952: 1
 1953: 1  0863	84			div	ab
 1954: 1
 1955: 1  0864	F5 4E			mov	buf_result_l,a    ;
 1956: 1
 1957: 1
 1958: 1  0866	02 06 C7		jmp	OUTPUT_1
 1959: 1
 1960: 1  0869			END_alg_6_1:
 1961: 1
 1962: 1  0869	22			ret
 1963:					$include (alg_7.h)    ; Подрограмма вывода текста на экран ПК
 1964: 1
 1965: 1
 1966: 1			;***************************************************************************************************
       1			******************************
 1967: 1			; alg-7  ; Подпрограмма вывода текстовых сообщений на ПК
 1968: 1			;***************************************************************************************************
       1			******************************
 1969: 1
 1970: 1
 1971: 1  086A			wiw_clr:
 1972: 1  086A	90 08 70	      MOV     DPTR,#tab_clr	  ; указатель на таблицу   clr
 1973: 1  086D	02 08 ED	      jmp	wiw_txt   	  ; вывод текста  ;
 1974: 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 37



 Line  I  Addr  Code            Source

 1975: 1  0870	0D 20 20 20	tab_clr:     db	0dh,'       '	  ;  таблицa   clr
       1  0874	20 20 20 20
 1976: 1
 1977: 1  0878			wiw_mk:
 1978: 1  0878	90 08 7E	     MOV     DPTR,#tab_mk	  ; указатель на таблицу
 1979: 1  087B	02 08 ED	      jmp	wiw_txt   	  ; вывод текста  ;
 1980: 1
 1981: 1  087E	0D 4D 49 4E	tab_mk:   db	0dh,'MINI-K: '	  ; таблицa  стартового сообщения
       1  0882	49 2D 4B 3A
       1  0886	20
 1982: 1
 1983: 1  0887			wiw_start:
 1984: 1  0887	90 08 8D	     MOV     DPTR,#tab_start	  ; указатель на таблицу
 1985: 1  088A	02 08 ED	      jmp	wiw_txt   	  ; вывод текста  ;
 1986: 1
 1987: 1  088D	0D 53 54 41	tab_start:   db	0dh,'START: '	  ; таблицa  стартового сообщения
       1  0891	52 54 3A 20
 1988: 1
 1989: 1  0895			wiw_pc:
 1990: 1  0895	90 08 9B	     MOV     DPTR,#tab_pc	  ; указатель на таблицу
 1991: 1  0898	02 08 ED	      jmp	wiw_txt   	  ; вывод текста  ;
 1992: 1
 1993: 1  089B	0D 50 43 2D	tab_pc:   db 0dh,'PC-K:  '	  ; таблицa  стартового сообщения
       1  089F	4B 3A 20 20
 1994: 1
 1995: 1  08A3			wiw_cop:
 1996: 1  08A3	90 08 A9	     MOV     DPTR,#tab_cop	  ; указатель на таблицу
 1997: 1  08A6	02 08 ED	      jmp	wiw_txt   	  ; вывод текста  ;
 1998: 1
 1999: 1  08A9	0D 43 4F 50	tab_cop:   db	0dh,'COP:   '	  ; таблицa  стартового сообщения
       1  08AD	3A 20 20 20
 2000: 1
 2001: 1
 2002: 1  08B1			 wiw_err:
 2003: 1  08B1	90 08 B7	      MOV     DPTR,#tab_err	  ; указатель на
 2004: 1  08B4	02 08 ED	      jmp	wiw_txt   	  ; вывод текста  ;
 2005: 1
 2006: 1  08B7	0D 45 72 72	tab_err:     db	0dh,'Error  '	  ; таблицa  err
       1  08BB	6F 72 20 20
 2007: 1
 2008: 1			; подготовка цифр на вывод
 2009: 1
 2010: 1  08BF			wiw_CIFR:
 2011: 1
 2012: 1  08BF	78 30		  	mov	r0,#buf_txt     ;  указатель места на начало буфера текста
 2013: 1
 2014: 1  08C1	74 0D		 	mov	a,#0dh
 2015: 1  08C3	F6			mov     @r0,a
 2016: 1  08C4	08			inc	r0    		;  передвинуть указатель на следующий знак
 2017: 1
 2018: 1  08C5	E5 44			mov	a,BUF_1
 2019: 1  08C7	24 30			add	a,#30h		; перевод в ASCII прибавлением 30
 2020: 1  08C9	F6			mov     @r0,a
 2021: 1  08CA	08			inc	r0    		;  передвинуть указатель на следующий знак
 2022: 1
 2023: 1  08CB	E5 45			mov	a,BUF_2

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 38



 Line  I  Addr  Code            Source

 2024: 1  08CD	24 30			add	a,#30h		; перевод в ASCII прибавлением 30
 2025: 1  08CF	F6			mov     @r0,a
 2026: 1  08D0	08			inc	r0    		;  передвинуть указатель на следующий знак
 2027: 1
 2028: 1  08D1	E5 46			mov	a,BUF_X
 2029: 1  08D3	24 30			add	a,#30h		; перевод в ASCII прибавлением 30
 2030: 1  08D5	F6			mov     @r0,a
 2031: 1  08D6	08			inc	r0    		;  передвинуть указатель на следующий знак
 2032: 1
 2033: 1  08D7	74 20			mov	a,#" "
 2034: 1  08D9	F6			mov     @r0,a
 2035: 1  08DA	08			inc	r0    		;  передвинуть указатель на следующий знак
 2036: 1
 2037: 1  08DB	E5 49			mov	a,BUF_2H
 2038: 1  08DD	24 30			add	a,#30h		; перевод в ASCII прибавлением 30
 2039: 1  08DF	F6			mov     @r0,a
 2040: 1
 2041: 1  08E0	08			inc	r0    		;  передвинуть указатель на следующий знак
 2042: 1  08E1	E5 48			mov	a,BUF_2M
 2043: 1  08E3	24 30			add	a,#30h		; перевод в ASCII прибавлением 30
 2044: 1  08E5	F6			mov     @r0,a
 2045: 1
 2046: 1  08E6	08			inc	r0    		;  передвинуть указатель на следующий знак
 2047: 1			;	mov	a,BUF_2L
 2048: 1  08E7	24 30			add	a,#30h		; перевод в ASCII прибавлением 30
 2049: 1  08E9	F6			mov     @r0,a
 2050: 1
 2051: 1  08EA	02 08 FB		jmp	wiw_8    	; переход на передачу
 2052: 1
 2053: 1
 2054: 1			; вывод 8-и знаков текстовых сообщений из буфера buf_txt  на ПК
 2055: 1
 2056: 1  08ED			wiw_txt:
 2057: 1
 2058: 1			; перезапись загоровки  текста  из памяти программ в буфер ткеста
 2059: 1
 2060: 1  08ED	78 30			mov	r0,#buf_txt   ;  указатель места на начало буфера текста
 2061: 1
 2062: 1  08EF	7B 00			mov r3,#0    ;  В R3 - указатель места в таблице
 2063: 1
 2064: 1  08F1			tt:
 2065: 1  08F1	EB			mov	a,r3
 2066: 1  08F2	93		   	MOVC A, @A + DPTR          ; вызвать в акк. очередной код из таблицы
 2067: 1  08F3	F6			mov	@r0,a
 2068: 1  08F4	0B			inc	r3
 2069: 1  08F5	08			inc     r0
 2070: 1
 2071: 1  08F6	EB			mov	a,r3
 2072: 1  08F7	54 78			anl     a,#1111000b  	; ограничить копирование 8-ю ячейками.
 2073: 1  08F9	60 F6			jz	tt
 2074: 1
 2075: 1  08FB			wiw_8:
 2076: 1  08FB	79 30		 	mov	r1,#buf_txt   		;  указатель места на начало буфера текста
 2077: 1  08FD	7B 11			mov     r3,#17                   ; счетчик байтов на r3  = 8
 2078: 1
 2079: 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 39



 Line  I  Addr  Code            Source

 2080: 1  08FF	C2 9C		  	clr	ren    ;  запретить работу приемника
 2081: 1
 2082: 1  0901			z1:
 2083: 1
 2084: 1  0901	30 99 FD		jnb TI, z1     		;  проверка флага  готовности передающего буфера UART
 2085: 1  0904	E7			mov     a,@r1  		; вызвать знак из указанного места буфера buf_txt
 2086: 1  0905	F5 99			mov	sbuf, a 	;  и записать в буфер передачи UART
 2087: 1  0907	C2 99			clr TI
 2088: 1
 2089: 1  0909	09			inc	r1    		;  передвинуть указатель на следующий знак
 2090: 1  090A	DB F5			djnz r3,z1    		; уменьшение r3 с проверкой на равенство 0. если не 0 - поторять
 2091: 1
 2092: 1  090C	C2 98			clr RI
 2093: 1  090E	D2 9C			setb ren 		; установка флага приемника
 2094: 1
 2095: 1  0910	22			ret
 2096: 1
 2097: 1  0911			clr_buf_txt:
 2098: 1				;//////////обнуление buf_txt
 2099: 1  0911	74 20			mov	a,#' '		; перевод в ASCII прибавлением 30
 2100: 1  0913	F5 30			mov     buf_txt,a
 2101: 1  0915	F5 31			mov     buf_txt+1,a
 2102: 1  0917	F5 32			mov     buf_txt+2,a
 2103: 1  0919	F5 33			mov     buf_txt+3,a
 2104: 1  091B	F5 34			mov     buf_txt+4,a
 2105: 1  091D	F5 35			mov     buf_txt+5,a
 2106: 1  091F	F5 36			mov     buf_txt+6,a
 2107: 1  0921	F5 37			mov     buf_txt+7,a
 2108: 1  0923	F5 38			mov     buf_txt+8,a
 2109: 1  0925	22			ret
 2110: 1
 2111: 1
 2112: 1
 2113:
 2114:				 	$include (alg_10_11.h); Подрограмма перевода из ASCII и обратно символов для работы с числам
				и
 2115: 1
 2116: 1			;***************************************************************************************************
       1			******************************
 2117: 1			; Алгоритм 10 и 11
 2118: 1			; п/п - таблица перевода кодов с мини-клавиатуры в коды исполнения
 2119: 1			; п/п - таблица перевода кодов ASCII в коды исполнения
 2120: 1			;***************************************************************************************************
       1			******************************
 2121: 1
 2122: 1
 2123: 1			; п/п - таблица перевода кодов с мини-клавиатуры в коды исполнения
 2124: 1  0926			tab_m_k:
 2125: 1
 2126: 1  0926	E5 4A			mov	a,kod_kl
 2127: 1  0928	54 0F			anl	a,#00001111b     ;  ограничить число кодов 16-ю
 2128: 1  092A	90 09 31	        MOV DPTR,#tab_m_
 2129: 1  092D	93		   	MOVC A, @A + DPTR          ; вызвать в акк. код из ячейки РС+смещение из акк.
 2130: 1  092E	F5 4A			mov	kod_kl,a
 2131: 1
 2132: 1  0930	22			ret

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 40



 Line  I  Addr  Code            Source

 2133: 1
 2134: 1  0931			tab_m_:
 2135: 1
 2136: 1  0931	00		       db   0
 2137: 1  0932	2B		       db   0101011b
 2138: 1  0933	2A		       db   '*'
 2139: 1  0934	0A		       db   1010b  ; "*"   код не исполняемый
 2140: 1  0935	01		       db   1
 2141: 1  0936	2D		       db   '-'
 2142: 1  0937	2F		       db   '/'
 2143: 1  0938	00		       db   0
 2144: 1  0939	3D		       db   '='
 2145: 1  093A	43		       db   'C'
 2146: 1  093B	52		       db   'R'
 2147: 1  093C	0D		       db   1101b  ; "#"   код исполнения
 2148: 1  093D	0A		       db   1010b  ; "*"   код не исполняемый
 2149: 1  093E	0A		       db   1010b  ; "*"   код не исполняемый
 2150: 1  093F	0A		       db   1010b  ; "*"   код не исполняемый
 2151: 1  0940	0A		       db   1010b  ; "*"   код не исполняемый
 2152: 1  0941	0A		       db   1010b  ; "*"   код не исполняемый
 2153: 1
 2154: 1
 2155: 1			; п/п - таблица перевода кодов ASCII в коды исполнения
 2156: 1
 2157: 1  0942			tab_asc:
 2158: 1
 2159: 1  0942	E5 4D		 	mov	a, kod_prm
 2160: 1  0944	54 0F			anl	a,#00001111b     ;  ограничить число кодов 16-ю
 2161: 1  0946	90 09 4D	        MOV DPTR,#tab_as
 2162: 1  0949	93		   	MOVC A, @A + DPTR          ; вызвать в акк. код из ячейки DPTR+смещение из акк.
 2163: 1  094A	F5 4D			mov	kod_prm, a
 2164: 1  094C	22			ret
 2165: 1
 2166: 1  094D			tab_as:
 2167: 1  094D	00		       db   0
 2168: 1  094E	01		       db   1
 2169: 1  094F	02		       db   2
 2170: 1  0950	03		       db   3
 2171: 1  0951	04		       db   4
 2172: 1  0952	05		       db   5
 2173: 1  0953	43		       db   'C'
 2174: 1  0954	07		       db   7
 2175: 1  0955	08		       db   8
 2176: 1  0956	52		       db   'R'
 2177: 1  0957	3D		       db   0111101b  ; "*"   код не исполняемый
 2178: 1  0958	3D		       db   0111101b  ; "*"   код не исполняемый
 2179: 1  0959	3D		       db   0111101b  ; "*"   код не исполняемый
 2180: 1  095A	3D		       db   0111101b  ; "#"   код исполнения    (0Dh), решетка от мини-клавиатуры
 2181: 1  095B	3D		       db   0111101b  ; "*"   код не исполняемый
 2182: 1  095C	3D		       db   0111101b  ; "="   код не исполняемый
 2183: 1
 2184:
 2185:
 2186:
 2187:					end


ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 41







                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 42





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6
ACC				  DATA	      E0
ALG_2				  CODE	    00CA	 223
ALG_2_2				  CODE	    00DF	 249
ALG_2_2_1			  CODE	    00EA	 259
ALG_2_3				  CODE	    00F3	 265
ALG_2_3_3			  CODE	    00F9	 270
ALG_2_4				  CODE	    0100	 276
ALG_2_5				  CODE	    0109	 282
ALG_3				  CODE	    011C	 307
ALG_3_01			  CODE	    0129	 319
ALG_3_10			  CODE	    0132	 324
ALG_3_11			  CODE	    013B	 329
ALG_3_3_0			  CODE	    0158	 347
ALG_3_3_1			  CODE	    0169	 357
ALG_3_3_2			  CODE	    017A	 367
ALG_3_3_XX			  CODE	    018B	 378
ALG_3_XX			  CODE	    0141	 333
ALG_4				  CODE	    018C	 389
ALG_5				  CODE	    0491	1010
ALG_6_1				  CODE	    0697	1503
AL_2_1				  CODE	    00D5	 241
A_A				  CODE	    0469	 975
A_A_5				  CODE	    0688	1473
B				  DATA	      F0
BITC				  BIT	      04	  61
BUF_1				  DATA	      44	  38
BUF_2				  DATA	      45	  39
BUF_2H				  DATA	      49	  44
BUF_2M				  DATA	      48	  43
BUF_3H				  DATA	      50	  53
BUF_COP				  DATA	      47	  42
BUF_RESULT_H			  DATA	      4F	  52
BUF_RESULT_L			  DATA	      4E	  51
BUF_TXT				  DATA	      30	  29
BUF_X				  DATA	      46	  40
CLR_BUF_TXT			  CODE	    0911	2097
CONT_DIV			  CODE	    085E	1948
CY				  BIT	      D7
DPH				  DATA	      83
DPL				  DATA	      82
EA				  BIT	      AF
END_ALG_4			  CODE	    048D	 998
END_ALG_5			  CODE	    0693	1490
END_ALG_6_1			  CODE	    0869	1960
END_ALG_6_1_METKA		  CODE	    06BA	1550
END_END_4			  CODE	    0490	1001
END_END_5			  CODE	    0696	1494

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 43



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
END_FULL_4			  CODE	    0484	 993
EN_ALG_2			  CODE	    0116	 291
EN_MAIN				  CODE	    00A0	 120
ES				  BIT	      AC
ET0				  BIT	      A9
ET1				  BIT	      AB
EX0				  BIT	      A8
EX1				  BIT	      AA
EXTI0				  CODE	    0003
EXTI1				  CODE	    0013
F0				  BIT	      D5
FAZA				  DATA	      41	  30
FAZA0				  CODE	    0192	 396
FAZA0_DO			  CODE	    01C3	 430
FAZA1				  CODE	    01EC	 475
FAZA10				  CODE	    04EF	1095
FAZA11				  CODE	    0528	1153
FAZA12				  CODE	    0561	1205
FAZA13				  CODE	    059A	1256
FAZA14				  CODE	    05D3	1307
FAZA15				  CODE	    060C	1358
FAZA16				  CODE	    0645	1409
FAZA17				  CODE	    067B	1463
FAZA1_DO			  CODE	    0222	 506
FAZA2				  CODE	    0242	 542
FAZA2_DO			  CODE	    0278	 572
FAZA3				  CODE	    0298	 608
FAZA3_DO			  CODE	    02CE	 638
FAZA4				  CODE	    02EE	 674
FAZA4_DO			  CODE	    0324	 704
FAZA5				  CODE	    0344	 740
FAZA5_DO			  CODE	    037A	 771
FAZA6				  CODE	    039A	 808
FAZA6_DO			  CODE	    03D0	 839
FAZA7				  CODE	    03F0	 875
FAZA7_DO			  CODE	    0426	 906
FAZA8				  CODE	    0446	 941
FAZA9				  CODE	    04B1	1031
FAZA_PROVERKA1			  CODE	    019F	 411
FAZA_PROVERKA1_1		  CODE	    01F9	 484
FAZA_PROVERKA1_2		  CODE	    024F	 551
FAZA_PROVERKA1_3		  CODE	    02A5	 617
FAZA_PROVERKA1_4		  CODE	    02FB	 683
FAZA_PROVERKA1_5		  CODE	    0351	 749
FAZA_PROVERKA1_6		  CODE	    03A7	 817
FAZA_PROVERKA1_7		  CODE	    03FD	 884
FAZA_PROVERKA2			  CODE	    01A5	 414
FAZA_PROVERKA2_1		  CODE	    01FF	 487
FAZA_PROVERKA2_2		  CODE	    0255	 554
FAZA_PROVERKA2_3		  CODE	    02AB	 620
FAZA_PROVERKA2_4		  CODE	    0301	 686
FAZA_PROVERKA2_5		  CODE	    0357	 752
FAZA_PROVERKA2_6		  CODE	    03AD	 820
FAZA_PROVERKA2_7		  CODE	    0403	 887
FAZA_PROVERKA3			  CODE	    01AB	 417
FAZA_PROVERKA3_1		  CODE	    0205	 490

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 44



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
FAZA_PROVERKA3_2		  CODE	    025B	 557
FAZA_PROVERKA3_3		  CODE	    02B1	 623
FAZA_PROVERKA3_4		  CODE	    0307	 689
FAZA_PROVERKA3_5		  CODE	    035D	 755
FAZA_PROVERKA3_6		  CODE	    03B3	 823
FAZA_PROVERKA3_7		  CODE	    0409	 890
FAZA_PROVERKA4			  CODE	    01B1	 420
FAZA_PROVERKA4_1		  CODE	    020B	 494
FAZA_PROVERKA4_2		  CODE	    0261	 561
FAZA_PROVERKA4_3		  CODE	    02B7	 627
FAZA_PROVERKA4_4		  CODE	    030D	 693
FAZA_PROVERKA4_5		  CODE	    0363	 759
FAZA_PROVERKA4_6		  CODE	    03B9	 827
FAZA_PROVERKA4_7		  CODE	    040F	 894
FAZA_PROVERKA4_8		  CODE	    0448	 956
FAZA_PROVERKA5			  CODE	    01B7	 423
FAZA_PROVERKA5_1		  CODE	    0211	 497
FAZA_PROVERKA5_2		  CODE	    0267	 564
FAZA_PROVERKA5_3		  CODE	    02BD	 630
FAZA_PROVERKA5_4		  CODE	    0313	 696
FAZA_PROVERKA5_5		  CODE	    0369	 762
FAZA_PROVERKA5_6		  CODE	    03BF	 830
FAZA_PROVERKA5_7		  CODE	    0415	 897
FAZA_PROVERKA5_8		  CODE	    044E	 959
FAZA_PROVERKA6			  CODE	    01BD	 426
FAZA_PROVERKA6_1		  CODE	    021C	 502
FAZA_PROVERKA6_2		  CODE	    0272	 569
FAZA_PROVERKA6_3		  CODE	    02C8	 635
FAZA_PROVERKA6_4		  CODE	    031E	 701
FAZA_PROVERKA6_5		  CODE	    0374	 767
FAZA_PROVERKA6_6		  CODE	    03CA	 835
FAZA_PROVERKA6_7		  CODE	    0420	 902
FAZA_PROVERKA6_8		  CODE	    0459	 964
FAZA_PROVERKA7_8		  CODE	    045F	 967
FAZA_PROVERKA8_8		  CODE	    0464	 970
FISP				  BIT	      02	  59
FLAG_MINUS			  CODE	    06E5	1602
F_1S				  BIT	      01	  58
F_KL				  BIT	      00	  57
F_KLD				  BIT	      03	  60
F_L				  BIT	      07	  65
F_NEG				  BIT	      05	  63
F_Z				  BIT	      06	  64
GOTO_DELETE			  CODE	    0850	1941
GOTO_MINUS			  CODE	    082D	1902
GOTO_MULTIPLICATION		  CODE	    0842	1926
GOTO_PLUS			  CODE	    06BD	1560
H_ST				  DATA	      42	  31
IDEL_30				  CODE	    01DA	 457
IDEL_30_1			  CODE	    0230	 524
IDEL_30_2			  CODE	    0286	 590
IDEL_30_3			  CODE	    02DC	 656
IDEL_30_4			  CODE	    0332	 722
IDEL_30_5			  CODE	    0388	 790
IDEL_30_6			  CODE	    03DE	 857
IDEL_30_7			  CODE	    0434	 922

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 45



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
IDEL_31				  CODE	    01E3	 466
IDEL_31_1			  CODE	    0239	 533
IDEL_31_2			  CODE	    028F	 599
IDEL_31_3			  CODE	    02E5	 665
IDEL_31_4			  CODE	    033B	 731
IDEL_31_5			  CODE	    0391	 799
IDEL_31_6			  CODE	    03E7	 866
IDEL_31_7			  CODE	    043D	 931
IDEL_41_0			  CODE	    04E6	1086
IDEL_41_01			  CODE	    051F	1145
IDEL_41_1			  CODE	    0558	1197
IDEL_41_2			  CODE	    0591	1248
IDEL_41_3			  CODE	    05CA	1299
IDEL_41_4			  CODE	    0603	1350
IDEL_41_5			  CODE	    063C	1401
IDEL_41_6			  CODE	    0672	1455
IE				  DATA	      A8
IE0				  BIT	      89
IE1				  BIT	      8B
INI_				  CODE	    00A2	 134
INT0				  BIT	      B2
INT1				  BIT	      B3
IP				  DATA	      B8
IT0				  BIT	      88
IT1				  BIT	      8A
J_3				  CODE	    0147	 337
J_31				  CODE	    014D	 340
J_32				  CODE	    0153	 343
KOD_DOP				  DATA	      4C	  48
KOD_KL				  DATA	      4A	  46
KOD_PRM				  DATA	      4D	  49
KOD_ST_4			  DATA	      4B	  47
MA1				  CODE	    0098	 115
MAIN				  CODE	    0090	 109
NEXT_DELETE			  CODE	    06B4	1546
NEXT_MINUS			  CODE	    06A8	1529
NEXT_MULTIPLICATION		  CODE	    06AE	1538
OK_0				  CODE	    04AE	1027
OK_0_3				  CODE	    0535	1167
OK_0_4				  CODE	    056E	1218
OK_0_5				  CODE	    05A7	1269
OK_0_6				  CODE	    05E0	1320
OK_0_7				  CODE	    0619	1371
OK_0_8				  CODE	    0652	1422
OK_1				  CODE	    04BE	1044
OK_1_2				  CODE	    0502	1117
OK_1_3				  CODE	    053B	1170
OK_1_4				  CODE	    0574	1221
OK_1_5				  CODE	    05AD	1272
OK_1_6				  CODE	    05E6	1323
OK_1_7				  CODE	    061F	1374
OK_1_8				  CODE	    0658	1425
OK_2				  CODE	    04C4	1047
OK_2_2				  CODE	    0508	1120
OK_2_3				  CODE	    0541	1173
OK_2_4				  CODE	    057A	1224

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 46



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
OK_2_5				  CODE	    05B3	1275
OK_2_6				  CODE	    05EC	1326
OK_2_7				  CODE	    0625	1377
OK_2_8				  CODE	    065E	1428
OK_3				  CODE	    04C6	1052
OK_3_2				  CODE	    050A	1124
OK_3_3				  CODE	    0543	1177
OK_3_4				  CODE	    057C	1228
OK_3_5				  CODE	    05B5	1279
OK_3_6				  CODE	    05EE	1330
OK_3_7				  CODE	    0627	1381
OK_3_8				  CODE	    0660	1432
OK_OK_1				  CODE	    04FC	1110
OUTPUT_1			  CODE	    06C7	1570
OUTPUT_1_MINUS			  CODE	    083F	1918
OV				  BIT	      D2
P				  BIT	      D0
P0				  DATA	      80
P1				  DATA	      90
P2				  DATA	      A0
P3				  DATA	      B0
PCON				  DATA	      87
PLUS_FAZ_10			  CODE	    0794	1761
PLUS_FAZ_11			  CODE	    07A9	1780
PLUS_FAZ_12			  CODE	    07BE	1799
PLUS_FAZ_13			  CODE	    07D3	1818
PLUS_FAZ_14			  CODE	    07E8	1837
PLUS_FAZ_15			  CODE	    07FD	1856
PLUS_FAZ_16			  CODE	    0812	1875
PLUS_FAZ_17			  CODE	    0827	1894
PLUS_FAZ_2			  CODE	    06EC	1608
PLUS_FAZ_3			  CODE	    0701	1628
PLUS_FAZ_4			  CODE	    0716	1647
PLUS_FAZ_5			  CODE	    072B	1666
PLUS_FAZ_6			  CODE	    0740	1685
PLUS_FAZ_7			  CODE	    0755	1704
PLUS_FAZ_8			  CODE	    076A	1723
PLUS_FAZ_9			  CODE	    077F	1742
PROV1				  CODE	    04A3	1022
PS				  BIT	      BC
PSW				  DATA	      D0
PT0				  BIT	      B9
PT1				  BIT	      BB
PX0				  BIT	      B8
PX1				  BIT	      BA
QQ				  CODE	    00C5	 207
QQ_T				  DATA	      43	  32
RB8				  BIT	      9A
RD				  BIT	      B7
REN				  BIT	      9C
RESET				  CODE	    0000
RI				  BIT	      98
RS0				  BIT	      D3
RS1				  BIT	      D4
RXD				  BIT	      B0
R_RESTART_R			  CODE	    047F	 987

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 47



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
R_RESTART_R_5			  CODE	    0691	1484
SBUF				  DATA	      99
SCON				  DATA	      98
SINT				  CODE	    0023
SM0				  BIT	      9F
SM1				  BIT	      9E
SM2				  BIT	      9D
SP				  DATA	      81
STACK				  NUMBER    0060	  22
START				  CODE	    0080	  91
T0				  BIT	      B4
T1				  BIT	      B5
TAB_AS				  CODE	    094D	2166
TAB_ASC				  CODE	    0942	2157
TAB_CLR				  CODE	    0870	1975
TAB_COP				  CODE	    08A9	1999
TAB_ERR				  CODE	    08B7	2006
TAB_MK				  CODE	    087E	1981
TAB_M_				  CODE	    0931	2134
TAB_M_K				  CODE	    0926	2124
TAB_PC				  CODE	    089B	1993
TAB_START			  CODE	    088D	1987
TB8				  BIT	      9B
TCON				  DATA	      88
TF0				  BIT	      8D
TF1				  BIT	      8F
TH0				  DATA	      8C
TH1				  DATA	      8D
TI				  BIT	      99
TIMER0				  CODE	    000B
TIMER1				  CODE	    001B
TL0				  DATA	      8A
TL1				  DATA	      8B
TMOD				  DATA	      89
TR0				  BIT	      8C
TR1				  BIT	      8E
TT				  CODE	    08F1	2064
TXD				  BIT	      B1
VV_START			  CODE	    0499	1015
WIW_8				  CODE	    08FB	2075
WIW_CIFR			  CODE	    08BF	2010
WIW_CLR				  CODE	    086A	1971
WIW_COP				  CODE	    08A3	1995
WIW_ERR				  CODE	    08B1	2002
WIW_MK				  CODE	    0878	1977
WIW_PC				  CODE	    0895	1989
WIW_START			  CODE	    0887	1983
WIW_TXT				  CODE	    08ED	2056
WR				  BIT	      B6
Z1				  CODE	    0901	2082
ZERO_CAME			  CODE	    06DE	1595
ZERO_CAME_10			  CODE	    07A2	1773
ZERO_CAME_11			  CODE	    07B7	1792
ZERO_CAME_12			  CODE	    07CC	1811
ZERO_CAME_13			  CODE	    07E1	1830
ZERO_CAME_14			  CODE	    07F6	1849

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 48



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
ZERO_CAME_15			  CODE	    080B	1868
ZERO_CAME_16			  CODE	    0820	1887
ZERO_CAME_2			  CODE	    06FA	1621
ZERO_CAME_3			  CODE	    070F	1640
ZERO_CAME_4			  CODE	    0724	1659
ZERO_CAME_5			  CODE	    0739	1678
ZERO_CAME_6			  CODE	    074E	1697
ZERO_CAME_7			  CODE	    0763	1716
ZERO_CAME_8			  CODE	    0778	1735
ZERO_CAME_9			  CODE	    078D	1754
