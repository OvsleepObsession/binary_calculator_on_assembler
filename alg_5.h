 
;*********************************************************************************************************************************
;  alg_5 -    ;  ввод второго числа с UART	
;*********************************************************************************************************************************

alg_5:  
	MOV A ,FAZA   	   	        ; загрузка фазы в аккум 
	CJNE A, #20, VV_start     	; проверка на 9 faza, если да то уходим
	JMP R_RESTART_R_5		; уход на рестарт
	
VV_start:

  	MOV A, SBUF		; загружаем символ из SBUF в KOD_PRM	
  	MOV KOD_PRM, A	

	CJNE A, #1010010b, Prov1 ; проверка на Reset
 	JMP R_RESTART_R_5
Prov1:
	CJNE A, #1000011b, OK_0 ; проверка на C
	MOV FAZA, #9
	MOV BUF_2, #0
	JMP alg_5
OK_0:
  	call tab_asc			; вызов алгоритма 11
  	
	
faza9: ;//////////////////////////////////////////////////////////

	MOV A ,FAZA   	   	        ; загрузка фазы в аккум 
	CJNE A, #9, faza10   		; проверка на 9 faza, если да то уходим
			
	MOV	A, KOD_PRM   
	
;////////........................................
; ПРОВЕРКА НА НЕДОПУСТИМЫЕ ЗНАЧЕНИЯ ПРИ 1 НАЖАТИИ
;///////.........................................	

	CJNE A, #1, OK_1   ;///// сама проверка
	JMP OK_3
OK_1:
	CJNE A, #0, OK_2   ;///// сама проверка
	JMP ok_3
OK_2:
	JMP ma1 	

;///////////////////////////////////////////////

ok_3:

	;//////////обнуление buf_txt
	call clr_buf_txt


	
	MOV FAZA, #10			; переводим фазу в 10
	
	mov	r0,#buf_txt     ;  указатель места на начало буфера текста
	
	mov	a,#0dh
	mov     buf_txt,a	
	
	mov	a,KOD_PRM       		; записываем цифру в BUF_TXT
	
	add	a,#30h		; перевод в ASCII прибавлением 30
	mov     buf_txt+1,a
	
	;///////////////////////
	; проверка на 30 или 31
	;///////////////////////
	
	mov	a,KOD_PRM       		; записываем в акум
	
	CJNE A, #0, IDEL_41_0    ;///// сама проверка 	

	mov	a,BUF_2
	CLR C
	RLC A
	mov	BUF_2,A
	
	JMP END_alg_5

IDEL_41_0:
	
	mov	a,BUF_2
	SETB C
	RLC A
	mov	BUF_2,A
	JMP END_alg_5
	
	
faza10: ;//////////////////////////////////////////////////////////

	MOV A ,FAZA   	   	        ; загрузка фазы в аккум 
	CJNE A, #10, faza11   		; проверка на 9 faza, если да то уходим
			
	 
	MOV	A, KOD_PRM       		; записываем цифру в BUF_TXT
	
	;***********************************
	;ПРОВЕРКА НА ввод = с клавиатукры ПК
	;*********************************
	
	CJNE A, #0111101b, OK_OK_1 ;///// сама проверка
	JMP A_A_5
	
OK_OK_1 :
	
;////////........................................
; ПРОВЕРКА НА НЕДОПУСТИМЫЕ ЗНАЧЕНИЯ ПРИ  НАЖАТИИ
;///////.........................................	
	CJNE A, #1, OK_1_2  ;///// сама проверка
	JMP OK_3_2 
OK_1_2 :
	CJNE A, #0, OK_2_2    ;///// сама проверка
	JMP ok_3_2 
OK_2_2 :	
	JMP ma1
;///////////////////////////////////////////////

ok_3_2 :
	
	add	a,#30h		; перевод в ASCII прибавлением 30
	mov     buf_txt+2,a
	
	MOV FAZA, #11		; переводим фазу в 10
	;///////////////////////
	; проверка на 30 или 31
	;///////////////////////
	
	mov	a,KOD_PRM       		; записываем в акум
	
	CJNE A, #0, IDEL_41_01    ;///// сама проверка 	

	mov	a,BUF_2
	CLR C
	RLC A
	mov	BUF_2,A
	
	JMP END_alg_5

IDEL_41_01:
	
	mov	a,BUF_2
	SETB C
	RLC A
	mov	BUF_2,A
	JMP END_alg_5
	
faza11: ;//////////////////////////////////////////////////////////

	MOV A ,FAZA   	   	        ; загрузка фазы в аккум 
	CJNE A, #11, faza12   		; проверка на 9 faza, если да то уходим
			
	 
	MOV	A ,KOD_PRM       		; записываем цифру в BUF_TXT
	
	CJNE A, #0111101b, OK_0_3 ;///// сама проверка
	JMP A_A_5
	
;////////........................................
; ПРОВЕРКА НА НЕДОПУСТИМЫЕ ЗНАЧЕНИЯ ПРИ  НАЖАТИИ
;///////.........................................
OK_0_3:	
	CJNE A, #1, OK_1_3  ;///// сама проверка
	JMP OK_3_3 
OK_1_3:
	CJNE A, #0, OK_2_3    ;///// сама проверка
	JMP ok_3_3 
OK_2_3:	
	JMP ma1
;///////////////////////////////////////////////

ok_3_3:
	
	add	a,#30h		; перевод в ASCII прибавлением 30
	mov     buf_txt+3,a
	MOV FAZA, #12		; переводим фазу в 10
	;///////////////////////
	; проверка на 30 или 31
	;///////////////////////
	
	mov	a,KOD_PRM       		; записываем в акум
	
	CJNE A, #0, IDEL_41_1    ;///// сама проверка 	

	mov	a,BUF_2
	CLR C
	RLC A
	mov	BUF_2,A
	
	JMP END_alg_5

IDEL_41_1:
	
	mov	a,BUF_2
	SETB C
	RLC A
	mov	BUF_2,A
	JMP END_alg_5
	
faza12: ;//////////////////////////////////////////////////////////

	MOV A ,FAZA   	   	        ; загрузка фазы в аккум 
	CJNE A, #12, faza13   		; проверка на 9 faza, если да то уходим
			
	 
	MOV	A ,KOD_PRM       		; записываем цифру в BUF_TXT
	CJNE A, #0111101b, OK_0_4 ;///// сама проверка
	JMP A_A_5
	
;////////........................................
; ПРОВЕРКА НА НЕДОПУСТИМЫЕ ЗНАЧЕНИЯ ПРИ  НАЖАТИИ
;///////.........................................	
OK_0_4:
	CJNE A, #1, OK_1_4  ;///// сама проверка
	JMP OK_3_4
OK_1_4 :
	CJNE A, #0, OK_2_4    ;///// сама проверка
	JMP ok_3_4 
OK_2_4:	
	JMP ma1
;///////////////////////////////////////////////

ok_3_4 :
	
	add	a,#30h		; перевод в ASCII прибавлением 30
	mov     buf_txt+4,a
	MOV FAZA, #13		; переводим фазу в 10
	;///////////////////////
	; проверка на 30 или 31
	;///////////////////////
	
	mov	a,KOD_PRM       		; записываем в акум
	
	CJNE A, #0, IDEL_41_2    ;///// сама проверка 	

	mov	a,BUF_2
	CLR C
	RLC A
	mov	BUF_2,A
	
	JMP END_alg_5

IDEL_41_2:
	
	mov	a,BUF_2
	SETB C
	RLC A
	mov	BUF_2,A
	JMP END_alg_5
	
faza13: ;//////////////////////////////////////////////////////////

	MOV A ,FAZA   	   	        ; загрузка фазы в аккум 
	CJNE A, #13, faza14  		; проверка на 9 faza, если да то уходим
			
	 
	MOV	A ,KOD_PRM       		; записываем цифру в BUF_TXT
	CJNE A, #0111101b, OK_0_5 ;///// сама проверка
	JMP A_A_5
	
;////////........................................
; ПРОВЕРКА НА НЕДОПУСТИМЫЕ ЗНАЧЕНИЯ ПРИ  НАЖАТИИ
;///////.........................................
OK_0_5:	
	CJNE A, #1, OK_1_5  ;///// сама проверка
	JMP OK_3_5
OK_1_5 :
	CJNE A, #0, OK_2_5    ;///// сама проверка
	JMP ok_3_5 
OK_2_5:	
	JMP ma1
;///////////////////////////////////////////////

ok_3_5 :
	
	add	a,#30h		; перевод в ASCII прибавлением 30
	mov     buf_txt+5,a
	MOV FAZA, #14		; переводим фазу в 10
	;///////////////////////
	; проверка на 30 или 31
	;///////////////////////
	
	mov	a,KOD_PRM       		; записываем в акум
	
	CJNE A, #0, IDEL_41_3    ;///// сама проверка 	

	mov	a,BUF_2
	CLR C
	RLC A
	mov	BUF_2,A
	
	JMP END_alg_5

IDEL_41_3:
	
	mov	a,BUF_2
	SETB C
	RLC A
	mov	BUF_2,A
	JMP END_alg_5
	
faza14: ;//////////////////////////////////////////////////////////

	MOV A ,FAZA   	   	        ; загрузка фазы в аккум 
	CJNE A, #14, faza15  		; проверка на 9 faza, если да то уходим
			
	 
	MOV	A ,KOD_PRM       		; записываем цифру в BUF_TXT
	CJNE A, #0111101b, OK_0_6 ;///// сама проверка
	JMP A_A_5
	
;////////........................................
; ПРОВЕРКА НА НЕДОПУСТИМЫЕ ЗНАЧЕНИЯ ПРИ  НАЖАТИИ
;///////.........................................
OK_0_6:	
	CJNE A, #1, OK_1_6  ;///// сама проверка
	JMP OK_3_6
OK_1_6:
	CJNE A, #0, OK_2_6    ;///// сама проверка
	JMP ok_3_6 
OK_2_6:	
	JMP ma1
;///////////////////////////////////////////////

ok_3_6 :
	
	add	a,#30h		; перевод в ASCII прибавлением 30
	mov     buf_txt+6,a
	MOV FAZA, #15		; переводим фазу в 10
	;///////////////////////
	; проверка на 30 или 31
	;///////////////////////
	
	mov	a,KOD_PRM       		; записываем в акум
	
	CJNE A, #0, IDEL_41_4    ;///// сама проверка 	

	mov	a,BUF_2
	CLR C
	RLC A
	mov	BUF_2,A
	
	JMP END_alg_5

IDEL_41_4:
	
	mov	a,BUF_2
	SETB C
	RLC A
	mov	BUF_2,A
	JMP END_alg_5
	
faza15: ;//////////////////////////////////////////////////////////

	MOV A ,FAZA   	   	        ; загрузка фазы в аккум 
	CJNE A, #15, faza16  		; проверка на 9 faza, если да то уходим
			
	 
	MOV	A ,KOD_PRM       		; записываем цифру в BUF_TXT
	CJNE A, #0111101b, OK_0_7 ;///// сама проверка
	JMP A_A_5
	
;////////........................................
; ПРОВЕРКА НА НЕДОПУСТИМЫЕ ЗНАЧЕНИЯ ПРИ  НАЖАТИИ
;///////.........................................
OK_0_7:	
	CJNE A, #1, OK_1_7  ;///// сама проверка
	JMP OK_3_7
OK_1_7 :
	CJNE A, #0, OK_2_7    ;///// сама проверка
	JMP ok_3_7 
OK_2_7:	
	JMP ma1
;///////////////////////////////////////////////

ok_3_7 :
	
	add	a,#30h		; перевод в ASCII прибавлением 30
	mov     buf_txt+7,a
	MOV FAZA, #16		; переводим фазу в 10
	;///////////////////////
	; проверка на 30 или 31
	;///////////////////////
	
	mov	a,KOD_PRM       		; записываем в акум
	
	CJNE A, #0, IDEL_41_5    ;///// сама проверка 	

	mov	a,BUF_2
	CLR C
	RLC A
	mov	BUF_2,A
	
	JMP END_alg_5

IDEL_41_5:
	
	mov	a,BUF_2
	SETB C
	RLC A
	mov	BUF_2,A
	JMP END_alg_5
	
faza16: ;//////////////////////////////////////////////////////////

	MOV A ,FAZA   	   	        ; загрузка фазы в аккум 
	CJNE A, #16, faza17   		; проверка на 9 faza, если да то уходим
			
	 
	MOV	A ,KOD_PRM       		; записываем цифру в BUF_TXT
	CJNE A, #0111101b, OK_0_8 ;///// сама проверка
	JMP A_A_5
	
;////////........................................
; ПРОВЕРКА НА НЕДОПУСТИМЫЕ ЗНАЧЕНИЯ ПРИ  НАЖАТИИ
;///////.........................................
OK_0_8:	
	CJNE A, #1, OK_1_8  ;///// сама проверка
	JMP OK_3_8
OK_1_8:
	CJNE A, #0, OK_2_8    ;///// сама проверка
	JMP ok_3_8 
OK_2_8:	
	JMP ma1
;///////////////////////////////////////////////

ok_3_8 :
	
	add	a,#30h		; перевод в ASCII прибавлением 30
	mov     buf_txt+8,a
	
	
	;MOV FAZA, #17		; переводим фазу в 10
	
	;///////////////////////
	; проверка на 30 или 31
	;///////////////////////
	
	mov	a,KOD_PRM       		; записываем в акум
	
	CJNE A, #0, IDEL_41_6    ;///// сама проверка 	

	mov	a,BUF_2
	CLR C
	RLC A
	mov	BUF_2,A
	
	JMP END_alg_5

IDEL_41_6:
	
	mov	a,BUF_2
	SETB C
	RLC A
	mov	BUF_2,A
	JMP END_alg_5
	
faza17:
	MOV A ,FAZA   	   	        ; загрузка фазы в аккум 
	CJNE A, #17, A_A_5   		; проверка на 9 faza, если да то уходим
	MOV	A ,KOD_PRM
	CJNE A, #1010010b, R_RESTART_R_5
	JMP R_RESTART_R_5
	
	 ;//////////////////////////////////////////////////////////

	
A_A_5: 
	;/////////////////////
	;********************
	; МАЕМАТИКА НАЧИНАЕТСЯ ЗДЕСЬ
	;********************
	;////////////////////
	
	call alg_6_1		; вызываем проверку чисел 
	MOV FAZA, #17		; переводим фазу в 19
	JMP END_END_5
;////////////////////////////	
R_RESTART_R_5:
			; рестарт программы
	JMP 0 
;////////////////////////////


END_alg_5:
	
	call	wiw_8    ; вывод цифр
	
END_END_5:
	ret
