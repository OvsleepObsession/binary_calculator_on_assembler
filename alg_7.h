
 
;*********************************************************************************************************************************
; alg-7  ; Подпрограмма вывода текстовых сообщений на ПК 
;*********************************************************************************************************************************


wiw_clr:
      MOV     DPTR,#tab_clr	  ; указатель на таблицу   clr 
      jmp	wiw_txt   	  ; вывод текста  ;	

tab_clr:     db	0dh,'       '	  ;  таблицa   clr 

wiw_mk: 	
     MOV     DPTR,#tab_mk	  ; указатель на таблицу  
      jmp	wiw_txt   	  ; вывод текста  ;	

tab_mk:   db	0dh,'MINI-K: '	  ; таблицa  стартового сообщения

wiw_start: 	
     MOV     DPTR,#tab_start	  ; указатель на таблицу  
      jmp	wiw_txt   	  ; вывод текста  ;	

tab_start:   db	0dh,'START: '	  ; таблицa  стартового сообщения

wiw_pc: 	
     MOV     DPTR,#tab_pc	  ; указатель на таблицу 
      jmp	wiw_txt   	  ; вывод текста  ;	

tab_pc:   db 0dh,'PC-K:  '	  ; таблицa  стартового сообщения

wiw_cop: 	
     MOV     DPTR,#tab_cop	  ; указатель на таблицу 
      jmp	wiw_txt   	  ; вывод текста  ;	

tab_cop:   db	0dh,'COP:   '	  ; таблицa  стартового сообщения
	
	
 wiw_err:		
      MOV     DPTR,#tab_err	  ; указатель на 
      jmp	wiw_txt   	  ; вывод текста  ;	

tab_err:     db	0dh,'Error  '	  ; таблицa  err	
 
; подготовка цифр на вывод 

wiw_CIFR:

  	mov	r0,#buf_txt     ;  указатель места на начало буфера текста
  	
 	mov	a,#0dh
	mov     @r0,a	
	inc	r0    		;  передвинуть указатель на следующий знак	
  	
	mov	a,BUF_1
	add	a,#30h		; перевод в ASCII прибавлением 30
	mov     @r0,a	
	inc	r0    		;  передвинуть указатель на следующий знак

	mov	a,BUF_2
	add	a,#30h		; перевод в ASCII прибавлением 30
	mov     @r0,a	
	inc	r0    		;  передвинуть указатель на следующий знак

	mov	a,BUF_X
	add	a,#30h		; перевод в ASCII прибавлением 30
	mov     @r0,a	
	inc	r0    		;  передвинуть указатель на следующий знак
	
	mov	a,#" "
	mov     @r0,a
	inc	r0    		;  передвинуть указатель на следующий знак

	mov	a,BUF_2H
	add	a,#30h		; перевод в ASCII прибавлением 30
	mov     @r0,a	
	
	inc	r0    		;  передвинуть указатель на следующий знак
	mov	a,BUF_2M
	add	a,#30h		; перевод в ASCII прибавлением 30
	mov     @r0,a		
	
	inc	r0    		;  передвинуть указатель на следующий знак
;	mov	a,BUF_2L
	add	a,#30h		; перевод в ASCII прибавлением 30
	mov     @r0,a
	
	jmp	wiw_8    	; переход на передачу
	
	
; вывод 8-и знаков текстовых сообщений из буфера buf_txt  на ПК 

wiw_txt:

; перезапись загоровки  текста  из памяти программ в буфер ткеста
        
	mov	r0,#buf_txt   ;  указатель места на начало буфера текста	

	mov r3,#0    ;  В R3 - указатель места в таблице
		
tt:
	mov	a,r3
   	MOVC A, @A + DPTR          ; вызвать в акк. очередной код из таблицы
	mov	@r0,a
	inc	r3
	inc     r0
	
	mov	a,r3	
	anl     a,#1111000b  	; ограничить копирование 8-ю ячейками. 
	jz	tt
	
wiw_8:
 	mov	r1,#buf_txt   		;  указатель места на начало буфера текста
	mov     r3,#17                   ; счетчик байтов на r3  = 8


  	clr	ren    ;  запретить работу приемника

z1:
	 
	jnb TI, z1     		;  проверка флага  готовности передающего буфера UART
	mov     a,@r1  		; вызвать знак из указанного места буфера buf_txt 	
	mov	sbuf, a 	;  и записать в буфер передачи UART
	clr TI	
		
	inc	r1    		;  передвинуть указатель на следующий знак	
	djnz r3,z1    		; уменьшение r3 с проверкой на равенство 0. если не 0 - поторять 
	
	clr RI
	setb ren 		; установка флага приемника
	
	ret

clr_buf_txt:
	;//////////обнуление buf_txt
	mov	a,#' '		; перевод в ASCII прибавлением 30
	mov     buf_txt,a
	mov     buf_txt+1,a
	mov     buf_txt+2,a
	mov     buf_txt+3,a
	mov     buf_txt+4,a
	mov     buf_txt+5,a
	mov     buf_txt+6,a
	mov     buf_txt+7,a
	mov     buf_txt+8,a
	ret



